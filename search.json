[{"path":"https://finngen.github.io/FinnGenUtilsR/articles/tutorial_add_info_FGconnectionHandler.html","id":"intro","dir":"Articles","previous_headings":"","what":"Intro","title":"USING FGconnectionHandler: Adding names to longitudinal and service sector codes","text":"tutorial show append additional information longitudinal service-sector table using dplyr package FGconnectionHandler object FinnGenUtilsR package. Information add includes, name medical codes English, name type visit, name type provider. understand FGconnectionHandler recommended see dedicate vignette tutorial_connection_handler. tutorial also included append additional information Kanta lab data. particular, name OMOP concept lab test.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/articles/tutorial_add_info_FGconnectionHandler.html","id":"set-up","dir":"Articles","previous_headings":"","what":"Set up","title":"USING FGconnectionHandler: Adding names to longitudinal and service sector codes","text":"tutorial developed using dummy data Atlas development project. execute Sandbox, sure change configuration fit needs. Create FGconnectionHandler object connection configuration fg_get_bq_config. can check connection successful. can access service sector data using connection object follows: service_sector_tbl tbl object can used dplyr functions.","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(FinnGenUtilsR) config <- fg_get_bq_config(    environment = \"atlasDevelopment\",    dataFreezeNumber = 12    ) #> Set option sqlRenderTempEmulationSchema = 'atlas-development-270609.sandbox' config <- fg_get_bq_config(    environment = \"sandbox-6\", # set your sandbox number    dataFreezeNumber = 12 # set the data freeze you want to use    ) FGconnectionHandler <- create_fg_connection_handler_FromList(config) #> Connecting using BigQuery driver #> Created a temporary table named #cars #> Inserting data took 0.0116 secs #> Dropping tables 'lmmmvhsycars' from schema 'atlas-development-270609.sandbox'. #>   |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100% #> Executing SQL took 2.11 secs FGconnectionHandler$connectionStatusLog #> # A tibble: 4 × 4 #>   databaseName     type    step                          message                 #>   <chr>            <fct>   <chr>                         <chr>                   #> 1 atlasDevelopment SUCCESS Check database connection     Valid connection        #> 2 atlasDevelopment SUCCESS Check temp table creation     can create temp tables  #> 3 atlasDevelopment SUCCESS sandboxToolsSchema connection Connected to tables: b… #> 4 atlasDevelopment SUCCESS medicalCodesSchema connection Connected to tables: f… service_sector_tbl <- FGconnectionHandler$getTblsandboxToolsSchema$finngen_r12_service_sector_detailed_longitudinal_v1()"},{"path":"https://finngen.github.io/FinnGenUtilsR/articles/tutorial_add_info_FGconnectionHandler.html","id":"generate-a-table-in-service-sector-format","dir":"Articles","previous_headings":"","what":"Generate a table in service sector format","title":"USING FGconnectionHandler: Adding names to longitudinal and service sector codes","text":"example create subset main service sector table filtering patients asthma diagnose (J45) INPAT source. IMPORTANT: important notice tables coming FGconnectionHandler columns lower case. can see table currently information medical codes:","code":"# get events with code \"J45\" in INPAT ss_subject_1_tbl  <- FGconnectionHandler$getTblsandboxToolsSchema$finngen_r12_service_sector_detailed_longitudinal_v1() |>    dplyr::filter(finngenid == \"FG00000001\") ss_subject_1_tbl #> Note: method with signature 'DBIConnection#SQL' chosen for function 'dbQuoteIdentifier', #>  target signature 'DatabaseConnectorJdbcConnection#SQL'. #>  \"DatabaseConnectorConnection#character\" would also be valid #> # Source:   SQL [?? x 16] #> # Database: DatabaseConnectorJdbcConnection #>    finngenid  source  event_age approx_event_day code1 code2 code3 code4 code5 #>    <chr>      <chr>       <dbl> <date>           <chr> <chr> <chr> <chr> <chr> #>  1 FG00000001 OUTPAT       34.5 2010-11-08       X59   NA    NA    NA    93    #>  2 FG00000001 OUTPAT       41.7 2018-01-16       W19   NA    NA    NA    NA    #>  3 FG00000001 OUTPAT       42.5 2018-11-17       X58   NA    NA    NA    NA    #>  4 FG00000001 OUTPAT       47.0 2023-05-22       M069  NA    NA    NA    NA    #>  5 FG00000001 OUTPAT       47.0 2023-05-22       Z992  NA    NA    NA    NA    #>  6 FG00000001 OUTPAT       47.0 2023-05-22       F4322 NA    NA    NA    NA    #>  7 FG00000001 OUTPAT       47.0 2023-05-22       C5691 NA    NA    NA    NA    #>  8 FG00000001 OUTPAT       47.0 2023-05-22       G564  G564  NA    NA    NA    #>  9 FG00000001 OUTPAT       47.0 2023-05-22       N3282 NA    NA    NA    NA    #> 10 FG00000001 OPER_IN      16.8 1993-02-18       8511  NA    NA    28    NA    #> # ℹ more rows #> # ℹ 7 more variables: code6 <chr>, code7 <chr>, code8 <chr>, code9 <chr>, #> #   icdver <chr>, category <chr>, index <chr>"},{"path":[]},{"path":"https://finngen.github.io/FinnGenUtilsR/articles/tutorial_add_info_FGconnectionHandler.html","id":"adding-info-to-medical-codes","dir":"Articles","previous_headings":"SERVICE SECTOR","what":"Adding info to medical codes","title":"USING FGconnectionHandler: Adding names to longitudinal and service sector codes","text":"Function fg_dbplyr_append_code_info_to_longitudinal_data adds new columns information medical code used event/row. just need indicate table translations. also available FGconnectionHandler object. recommend take one highest version number.","code":"ss_subject_1_with_translations_tbl <- fg_dbplyr_append_code_info_to_longitudinal_data(   ss_subject_1_tbl,    FGconnectionHandler$getTblmedicalCodesSchema$fg_codes_info_v7()   ) ss_subject_1_with_translations_tbl |>     dplyr::select(finngenid, source, approx_event_day, code1, code2, code3, code, name_en, name_fi, omop_concept_id)  #> # Source:   SQL [?? x 10] #> # Database: DatabaseConnectorJdbcConnection #>    finngenid  source  approx_event_day code1 code2 code3 code   name_en  name_fi #>    <chr>      <chr>   <date>           <chr> <chr> <chr> <chr>  <chr>    <chr>   #>  1 FG00000001 OUTPAT  2010-11-08       X59   NA    NA    X59    Exposur… NA      #>  2 FG00000001 OUTPAT  2018-01-16       W19   NA    NA    W19    Unspeci… NA      #>  3 FG00000001 OUTPAT  2018-11-17       X58   NA    NA    X58    Exposur… NA      #>  4 FG00000001 OUTPAT  2023-05-22       M069  NA    NA    M06.9  Rheumat… NA      #>  5 FG00000001 OUTPAT  2023-05-22       Z992  NA    NA    Z99.2  Depende… NA      #>  6 FG00000001 OUTPAT  2023-05-22       F4322 NA    NA    F43.22 Adaptat… Sopeut… #>  7 FG00000001 OUTPAT  2023-05-22       C5691 NA    NA    C56.91 Maligna… Munasa… #>  8 FG00000001 OUTPAT  2023-05-22       G564  G564  NA    G56.4  Causalg… NA      #>  9 FG00000001 OUTPAT  2023-05-22       N3282 NA    NA    N32.82 Instabi… Virtsa… #> 10 FG00000001 OPER_IN 1993-02-18       8511  NA    NA    8511   Cervica… Kaulak… #> # ℹ more rows #> # ℹ 1 more variable: omop_concept_id <chr>"},{"path":"https://finngen.github.io/FinnGenUtilsR/articles/tutorial_add_info_FGconnectionHandler.html","id":"if-an-eventrow-uses-more-than-one-medical-code","dir":"Articles","previous_headings":"SERVICE SECTOR","what":"If an event/row uses more than one medical code","title":"USING FGconnectionHandler: Adding names to longitudinal and service sector codes","text":"events include one medical code, one way understand medical code. Parameters fg_dbplyr_append_code_info_to_longitudinal_data allows chose name medical code situations. example: PURCH_map_to = “VNR”, tells use VNR code PURCH register, instead default ATC ICD10fi_map_to = “CODE1”, tells use first code ICD10fi, instead default CODE1*CODE2 combination code Se help, options","code":"fg_dbplyr_append_code_info_to_longitudinal_data(   ss_subject_1_tbl,    FGconnectionHandler$getTblmedicalCodesSchema$fg_codes_info_v7(),      PURCH_map_to = \"VNR\",      ICD10fi_map_to = \"CODE1\"    ) |>   filter(vocabulary_id == \"ICD10fi\" | vocabulary_id == \"VNRfi\") |>     dplyr::select(finngenid, source, approx_event_day, code1, code2, vocabulary_id, code, name_en, name_fi, omop_concept_id)  #> # Source:   SQL [?? x 10] #> # Database: DatabaseConnectorJdbcConnection #>    finngenid  source approx_event_day code1 code2 vocabulary_id code   name_en   #>    <chr>      <chr>  <date>           <chr> <chr> <chr>         <chr>  <chr>     #>  1 FG00000001 OUTPAT 2010-11-08       X59   NA    ICD10fi       X59    Exposure… #>  2 FG00000001 OUTPAT 2018-01-16       W19   NA    ICD10fi       W19    Unspecif… #>  3 FG00000001 OUTPAT 2018-11-17       X58   NA    ICD10fi       X58    Exposure… #>  4 FG00000001 OUTPAT 2023-05-22       M069  NA    ICD10fi       M06.9  Rheumato… #>  5 FG00000001 OUTPAT 2023-05-22       Z992  NA    ICD10fi       Z99.2  Dependen… #>  6 FG00000001 OUTPAT 2023-05-22       F4322 NA    ICD10fi       F43.22 Adaptati… #>  7 FG00000001 OUTPAT 2023-05-22       C5691 NA    ICD10fi       C56.91 Malignan… #>  8 FG00000001 OUTPAT 2023-05-22       G564  G564  ICD10fi       G56.4  Causalgia #>  9 FG00000001 OUTPAT 2023-05-22       N3282 NA    ICD10fi       N32.82 Instabil… #> 10 FG00000001 OUTPAT 2015-05-25       J450  NA    ICD10fi       J45.0  Predomin… #> # ℹ more rows #> # ℹ 2 more variables: name_fi <chr>, omop_concept_id <chr> ?fg_append_code_info_to_longitudinal_data_sql"},{"path":"https://finngen.github.io/FinnGenUtilsR/articles/tutorial_add_info_FGconnectionHandler.html","id":"reduce-code-precision","dir":"Articles","previous_headings":"SERVICE SECTOR","what":"Reduce code precision","title":"USING FGconnectionHandler: Adding names to longitudinal and service sector codes","text":"ICD10fi, ICD9fi, ICD8fi, ATC, NCSPfi, code systems reflect hierarchy code first letters . possible truncate medical codes information added. practice adds code names parent codes. can see column code truncated code name_en name truncated code.","code":"fg_dbplyr_append_code_info_to_longitudinal_data(   ss_subject_1_tbl,    FGconnectionHandler$getTblmedicalCodesSchema$fg_codes_info_v7(),    ICD10fi_precision = 3,   ICD9fi_precision = 3,   ICD8fi_precision = 3,   ATC_precision = 3,   NCSPfi_precision = 2 )|>   dplyr::select(finngenid, source, approx_event_day, code1, code2, vocabulary_id, code, name_en, name_fi, omop_concept_id)  #> # Source:   SQL [?? x 10] #> # Database: DatabaseConnectorJdbcConnection #>    finngenid  source  approx_event_day code1 code2 vocabulary_id code  name_en   #>    <chr>      <chr>   <date>           <chr> <chr> <chr>         <chr> <chr>     #>  1 FG00000001 OUTPAT  2010-11-08       X59   NA    ICD10fi       X59   Exposure… #>  2 FG00000001 OUTPAT  2018-01-16       W19   NA    ICD10fi       W19   Unspecif… #>  3 FG00000001 OUTPAT  2018-11-17       X58   NA    ICD10fi       X58   Exposure… #>  4 FG00000001 OUTPAT  2023-05-22       M069  NA    ICD10fi       M06   Other rh… #>  5 FG00000001 OUTPAT  2023-05-22       Z992  NA    ICD10fi       Z99   Dependen… #>  6 FG00000001 OUTPAT  2023-05-22       F4322 NA    ICD10fi       F43   Reaction… #>  7 FG00000001 OUTPAT  2023-05-22       C5691 NA    ICD10fi       C56   Malignan… #>  8 FG00000001 OUTPAT  2023-05-22       G564  G564  ICD10fi       G56   Mononeur… #>  9 FG00000001 OUTPAT  2023-05-22       N3282 NA    ICD10fi       N32   Other di… #> 10 FG00000001 OPER_IN 1993-02-18       8511  NA    FHL           8511  Cervical… #> # ℹ more rows #> # ℹ 2 more variables: name_fi <chr>, omop_concept_id <chr>"},{"path":"https://finngen.github.io/FinnGenUtilsR/articles/tutorial_add_info_FGconnectionHandler.html","id":"adding-info-to-visit-type","dir":"Articles","previous_headings":"","what":"Adding info to visit type","title":"USING FGconnectionHandler: Adding names to longitudinal and service sector codes","text":"Function fg_dbplyr_append_visit_type_info_to_service_sector_data adds new columns information visit type. service-sector data, information visit type defined CODE5 CODE9 depending SOURCE time period. fg_dbplyr_append_visit_type_info_to_service_sector_data abstracts nuances, assign one visit type code per row. Notice visit may contain one event/row. Events/rows belonging visit share combination SOURCE+INDEX. default, fg_bq_append_visit_type_info_to_service_sector_data also include two columns is_clinic_visit is_follow_up_visit TRUE visit clinic visit follow-visit, respectively. However, works fg_codes_info_table version v7 higher. need use lower versions set parameters add_is_clinic_visist add_is_follow_up_visit FALSE. See help details.","code":"fg_dbplyr_append_visit_type_info_to_service_sector_data(   ss_subject_1_tbl,    FGconnectionHandler$getTblmedicalCodesSchema$fg_codes_info_v7()   )|>    dplyr::select(finngenid, source, index, approx_event_day, code5, code6, code8, code9, visit_type_code, visit_type_name_en, is_clinic_visit, is_follow_up_visit) #> # Source:   SQL [?? x 12] #> # Database: DatabaseConnectorJdbcConnection #>    finngenid  source   index approx_event_day code5 code6 code8 code9 #>    <chr>      <chr>    <chr> <date>           <chr> <chr> <chr> <chr> #>  1 FG00000001 OPER_OUT 268   2012-12-31       93    20U   NA    NA    #>  2 FG00000001 OUTPAT   189   2015-03-29       92    55    NA    NA    #>  3 FG00000001 PRIM_OUT 139   2018-12-31       R10   T11   NA    NA    #>  4 FG00000001 PURCH    33    2020-05-26       NA    NA    NA    NA    #>  5 FG00000001 OUTPAT   90    2020-02-26       NA    80    R56   E     #>  6 FG00000001 PURCH    133   2006-07-05       NA    NA    NA    NA    #>  7 FG00000001 OUTPAT   241   2017-02-03       93    20P   NA    NA    #>  8 FG00000001 OUTPAT   198   2001-02-21       92    50    NA    NA    #>  9 FG00000001 OUTPAT   34    2016-03-09       94    20J   NA    NA    #> 10 FG00000001 PRIM_OUT 287   2023-03-24       R10   T11   NA    NA    #> # ℹ more rows #> # ℹ 4 more variables: visit_type_code <chr>, visit_type_name_en <chr>, #> #   is_clinic_visit <chr>, is_follow_up_visit <chr>"},{"path":"https://finngen.github.io/FinnGenUtilsR/articles/tutorial_add_info_FGconnectionHandler.html","id":"adding-info-to-provider-type","dir":"Articles","previous_headings":"","what":"Adding info to provider type","title":"USING FGconnectionHandler: Adding names to longitudinal and service sector codes","text":"Function fg_dbplyr_append_provider_info_to_service_sector_data adds new columns information personal unit provided diagnose visit. service-sector data, information provider defined CODE6 CODE7 depending SOURCE. fg_dbplyr_append_provider_info_to_service_sector_data abstracts nuances, assign one provider type code per row.","code":"fg_dbplyr_append_provider_info_to_service_sector_data(   ss_subject_1_tbl,    FGconnectionHandler$getTblmedicalCodesSchema$fg_codes_info_v7()   )|>    dplyr::select(finngenid, source, index, approx_event_day, code5, code6, code8, code9, provider_code, provider_name_en, provider_concept_class_id) #> # Source:   SQL [?? x 11] #> # Database: DatabaseConnectorJdbcConnection #>    finngenid source index approx_event_day code5 code6 code8 code9 provider_code #>    <chr>     <chr>  <chr> <date>           <chr> <chr> <chr> <chr> <chr>         #>  1 FG000000… PURCH  47    2020-10-23       NA    NA    NA    NA    NA            #>  2 FG000000… PURCH  184   2011-02-24       NA    NA    NA    NA    NA            #>  3 FG000000… PURCH  115   2003-04-02       NA    NA    NA    NA    NA            #>  4 FG000000… PURCH  322   2001-10-12       NA    NA    NA    NA    NA            #>  5 FG000000… PURCH  306   1997-02-11       NA    NA    NA    NA    NA            #>  6 FG000000… PRIM_… 296   2022-02-18       R10   T31   NA    NA    NA            #>  7 FG000000… PURCH  123   2005-09-02       NA    NA    NA    NA    NA            #>  8 FG000000… PURCH  289   2017-07-08       NA    NA    NA    NA    NA            #>  9 FG000000… PURCH  299   1996-06-23       NA    NA    NA    NA    NA            #> 10 FG000000… PURCH  96    2022-04-15       NA    NA    NA    NA    NA            #> # ℹ more rows #> # ℹ 2 more variables: provider_name_en <chr>, provider_concept_class_id <chr>"},{"path":[]},{"path":"https://finngen.github.io/FinnGenUtilsR/articles/tutorial_add_info_FGconnectionHandler.html","id":"generate-a-table-in-service-sector-format-1","dir":"Articles","previous_headings":"KANTA LAB DATA","what":"Generate a table in service sector format","title":"USING FGconnectionHandler: Adding names to longitudinal and service sector codes","text":"example create subset main service sector table querying latest 20 events subject “FG00000001”: can see table currently information medical codes:","code":"kanta_subject_1_tbl  <- FGconnectionHandler$getTblsandboxToolsSchema$kanta_r12_v1()|>    dplyr::filter(finngenid == \"FG00000001\") |>    dplyr::arrange(desc(approx_event_datetime)) kanta_subject_1_tbl #> # Source:     SQL [?? x 19] #> # Database:   DatabaseConnectorJdbcConnection #> # Ordered by: desc(approx_event_datetime) #>    finngenid  event_age approx_event_datetime test_name test_id omop_concept_id #>    <chr>          <dbl> <dttm>                <chr>     <chr>             <dbl> #>  1 FG00000001      71.7 2022-12-07 12:07:00   pt-gfre   656400               -1 #>  2 FG00000001      71.6 2022-11-04 16:18:00   p-crp     1605013         3020460 #>  3 FG00000001      71.6 2022-10-17 12:00:11   b-trom    3002791         3007461 #>  4 FG00000001      71.6 2022-10-15 07:01:00   e-mchc    1557            3003338 #>  5 FG00000001      71.5 2022-09-22 11:53:00   e-mchc    1557            3003338 #>  6 FG00000001      71.5 2022-09-12 12:03:00   s-ca-ion  9010            3016431 #>  7 FG00000001      71.5 2022-09-07 06:00:00   b-trom    2791            3007461 #>  8 FG00000001      71.4 2022-08-31 17:39:14   u-eryt    11344           3002582 #>  9 FG00000001      71.4 2022-08-26 08:57:00   e-mchc    1557            3003338 #> 10 FG00000001      71.4 2022-08-22 08:32:00   b-eryt    1101341         3026361 #> # ℹ more rows #> # ℹ 13 more variables: measurement_value <dbl>, measurement_unit <chr>, #> #   measurement_value_harmonized <dbl>, measurement_unit_harmonized <chr>, #> #   test_outcome <chr>, measurement_status <chr>, #> #   reference_range_low_value <dbl>, reference_range_high_value <dbl>, #> #   coding_system_oid <chr>, test_id_source <chr>, test_name_source <chr>, #> #   measurement_value_source <dbl>, measurement_unit_source <chr>"},{"path":"https://finngen.github.io/FinnGenUtilsR/articles/tutorial_add_info_FGconnectionHandler.html","id":"adding-info-to-omop_concept_id-codes","dir":"Articles","previous_headings":"KANTA LAB DATA","what":"Adding info to OMOP_CONCEPT_ID codes","title":"USING FGconnectionHandler: Adding names to longitudinal and service sector codes","text":"Function fg_dbplyr_append_concept_info_data adds new column information OMOP_CONCEPT_ID name.","code":"omop_schema <- \"atlas-development-270609.etl_sam_r12_5k_omop\" kanta_subject_1_tbl_with_omop_name <- kanta_subject_1_tbl |> fg_dbplyr_append_concept_info_data(omop_schema) kanta_subject_1_tbl_with_omop_name |>     dplyr::select(finngenid, event_age, approx_event_datetime, test_name, test_id, omop_concept_id, omop_concept_name)  #> # Source:   SQL [?? x 7] #> # Database: DatabaseConnectorJdbcConnection #>    finngenid  event_age approx_event_datetime test_name test_id omop_concept_id #>    <chr>          <dbl> <dttm>                <chr>     <chr>             <dbl> #>  1 FG00000001      65.0 2016-04-05 08:18:00   p-bil     4592            3006140 #>  2 FG00000001      69.5 2020-09-17 09:03:00   p-bil     4592            3006140 #>  3 FG00000001      70.4 2021-08-20 09:52:00   p-bil     4592            3006140 #>  4 FG00000001      65.4 2016-08-29 08:36:00   e-mch     1558            3035941 #>  5 FG00000001      69.9 2021-02-03 15:58:00   e-mch     1558            3035941 #>  6 FG00000001      70.6 2021-11-02 13:12:00   e-mch     3001558         3035941 #>  7 FG00000001      63.7 2014-12-07 09:52:00   e-mch     1558            3035941 #>  8 FG00000001      66.7 2017-11-20 11:43:00   e-mch     1558            3035941 #>  9 FG00000001      67.5 2018-09-02 09:00:00   e-mch     1558            3035941 #> 10 FG00000001      71.2 2022-06-16 10:23:00   p-k       1999            3023103 #> # ℹ more rows #> # ℹ 1 more variable: omop_concept_name <chr>"},{"path":"https://finngen.github.io/FinnGenUtilsR/articles/tutorial_add_info_bigrquery.html","id":"intro","dir":"Articles","previous_headings":"","what":"Intro","title":"USING BIGRQUERY PACKAGE: Adding names to longitudinal, service sector, or lab codes","text":"tutorial show append additional information longitudinal service-sector table bigquery using bigrquery package. Information add includes, name medical codes English, name type visit, name type provider. tutorial also included append additional information Kanta lab data. particular, name OMOP concept lab test.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/articles/tutorial_add_info_bigrquery.html","id":"set-up","dir":"Articles","previous_headings":"","what":"Set up","title":"USING BIGRQUERY PACKAGE: Adding names to longitudinal, service sector, or lab codes","text":"tutorial developed using dummy data Atlas development project. execute Sandbox, sure change following paths.","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(bigrquery) library(FinnGenUtilsR)   bigrquery::bq_auth(path = Sys.getenv(\"GCP_SERVICE_KEY\")) project_id <- \"atlas-development-270609\"  test_longitudinal_data_table <- \"atlas-development-270609.sandbox_tools_r12.finngen_r12_service_sector_detailed_longitudinal_v1\" fg_codes_info_table <- \"atlas-development-270609.medical_codes.fg_codes_info_v7\"  tmp_schema <- \"sandbox\"  kanta_lab_data_table <- \"atlas-development-270609.sandbox_tools_r12.kanta_r12_v1\" omop_schema <- \"atlas-development-270609.etl_sam_r12_5k_omop\""},{"path":[]},{"path":"https://finngen.github.io/FinnGenUtilsR/articles/tutorial_add_info_bigrquery.html","id":"generate-a-table-in-service-sector-format","dir":"Articles","previous_headings":"SERVICE SECTOR","what":"Generate a table in service sector format","title":"USING BIGRQUERY PACKAGE: Adding names to longitudinal, service sector, or lab codes","text":"example create subset main service sector table querying latest 20 events subject “FG00000001”: can see table currently information medical codes:","code":"sql <- paste(\"SELECT * FROM \", test_longitudinal_data_table, \"WHERE FINNGENID='FG00000001' ORDER BY APPROX_EVENT_DAY DESC LIMIT 20\") event_for_subject_1 <- bq_project_query(project_id, sql) bq_table_download(event_for_subject_1) #> # A tibble: 20 × 16 #>    FINNGENID  SOURCE   EVENT_AGE APPROX_EVENT_DAY CODE1  CODE2 CODE3 CODE4 CODE5 #>    <chr>      <chr>        <dbl> <date>           <chr>  <chr> <chr> <chr> <chr> #>  1 FG00000001 PRIM_OUT      47.1 2023-06-20       WYA05  NA    NA    NA    R10   #>  2 FG00000001 OUTPAT        47.0 2023-05-22       N3282  NA    NA    NA    NA    #>  3 FG00000001 OUTPAT        47.0 2023-05-22       C5041  NA    NA    NA    NA    #>  4 FG00000001 OUTPAT        47.0 2023-05-22       F03    NA    NA    NA    NA    #>  5 FG00000001 OUTPAT        47.0 2023-05-22       C5691  NA    NA    NA    NA    #>  6 FG00000001 OUTPAT        47.0 2023-05-22       G564   G564  NA    NA    NA    #>  7 FG00000001 OUTPAT        47.0 2023-05-22       Z992   NA    NA    NA    NA    #>  8 FG00000001 OUTPAT        47.0 2023-05-22       M069   NA    NA    NA    NA    #>  9 FG00000001 OUTPAT        47.0 2023-05-22       W06    NA    NA    NA    NA    #> 10 FG00000001 OUTPAT        47.0 2023-05-22       F4322  NA    NA    NA    NA    #> 11 FG00000001 PRIM_OUT      46.8 2023-03-24       WX290  NA    NA    NA    R10   #> 12 FG00000001 PRIM_OUT      46.8 2023-03-21       NH3BA  NA    NA    NA    R10   #> 13 FG00000001 PRIM_OUT      46.8 2023-03-21       SPAT1… NA    NA    NA    R10   #> 14 FG00000001 PRIM_OUT      46.8 2023-03-21       Z012   NA    NA    NA    R10   #> 15 FG00000001 PRIM_OUT      46.8 2023-03-03       L40    NA    NA    NA    R50   #> 16 FG00000001 PURCH         46.6 2022-12-31       A12BA… 205   3983… 1     NA    #> 17 FG00000001 PURCH         46.6 2022-12-25       L04AD… 127   4675… 1     NA    #> 18 FG00000001 PRIM_OUT      46.6 2022-12-25       SPAT1… NA    NA    NA    R20   #> 19 FG00000001 PRIM_OUT      46.6 2022-12-25       SPAT1… NA    NA    NA    R20   #> 20 FG00000001 PRIM_OUT      46.6 2022-12-25       M750   NA    NA    NA    R20   #> # ℹ 7 more variables: CODE6 <chr>, CODE7 <chr>, CODE8 <chr>, CODE9 <chr>, #> #   ICDVER <chr>, CATEGORY <chr>, INDEX <chr>"},{"path":"https://finngen.github.io/FinnGenUtilsR/articles/tutorial_add_info_bigrquery.html","id":"adding-info-to-medical-codes","dir":"Articles","previous_headings":"SERVICE SECTOR","what":"Adding info to medical codes","title":"USING BIGRQUERY PACKAGE: Adding names to longitudinal, service sector, or lab codes","text":"Function fg_bq_append_code_info_to_longitudinal_data adds new columns information medical code used event/row. example: code, original code; name_en, name code English; name_fi name code Finnish; omop_concept_id, find additional info Atlas.","code":"event_for_subject_1_with_translations <- fg_bq_append_code_info_to_longitudinal_data(   project_id, event_for_subject_1, fg_codes_info_table) bq_table_download(event_for_subject_1_with_translations) |>     dplyr::select(FINNGENID, SOURCE, APPROX_EVENT_DAY, CODE1, CODE2, CODE3, code, name_en, name_fi, omop_concept_id)  #> # A tibble: 20 × 10 #>    FINNGENID  SOURCE   APPROX_EVENT_DAY CODE1  CODE2 CODE3 code  name_en name_fi #>    <chr>      <chr>    <date>           <chr>  <chr> <chr> <chr> <chr>   <chr>   #>  1 FG00000001 PRIM_OUT 2023-06-20       WYA05  NA    NA    WYA05 Emerge… Ensiap… #>  2 FG00000001 OUTPAT   2023-05-22       N3282  NA    NA    N32.… Instab… Virtsa… #>  3 FG00000001 OUTPAT   2023-05-22       C5041  NA    NA    C50.… Malign… Rinnan… #>  4 FG00000001 OUTPAT   2023-05-22       F03    NA    NA    F03   Unspec… NA      #>  5 FG00000001 OUTPAT   2023-05-22       C5691  NA    NA    C56.… Malign… Munasa… #>  6 FG00000001 OUTPAT   2023-05-22       G564   G564  NA    G56.4 Causal… NA      #>  7 FG00000001 OUTPAT   2023-05-22       Z992   NA    NA    Z99.2 Depend… NA      #>  8 FG00000001 OUTPAT   2023-05-22       M069   NA    NA    M06.9 Rheuma… NA      #>  9 FG00000001 OUTPAT   2023-05-22       W06    NA    NA    W06   Fall i… NA      #> 10 FG00000001 OUTPAT   2023-05-22       F4322  NA    NA    F43.… Adapta… Sopeut… #> 11 FG00000001 PRIM_OUT 2023-03-24       WX290  NA    NA    WX290 Other … Muu jo… #> 12 FG00000001 PRIM_OUT 2023-03-21       NH3BA  NA    NA    NA    NA      NA      #> 13 FG00000001 PRIM_OUT 2023-03-21       SPAT1… NA    NA    SPAT… Admini… Lääkke… #> 14 FG00000001 PRIM_OUT 2023-03-21       Z012   NA    NA    Z01.2 Dental… NA      #> 15 FG00000001 PRIM_OUT 2023-03-03       L40    NA    NA    L40   Psoria… NA      #> 16 FG00000001 PURCH    2022-12-31       A12BA… 205   3983… A12B… potass… NA      #> 17 FG00000001 PURCH    2022-12-25       L04AD… 127   4675… L04A… ciclos… NA      #> 18 FG00000001 PRIM_OUT 2022-12-25       SPAT1… NA    NA    SPAT… No pro… Ei toi… #> 19 FG00000001 PRIM_OUT 2022-12-25       SPAT1… NA    NA    SPAT… No pro… Ei toi… #> 20 FG00000001 PRIM_OUT 2022-12-25       M750   NA    NA    M75.0 Adhesi… NA      #> # ℹ 1 more variable: omop_concept_id <chr>"},{"path":"https://finngen.github.io/FinnGenUtilsR/articles/tutorial_add_info_bigrquery.html","id":"if-an-eventrow-uses-more-than-one-medical-code","dir":"Articles","previous_headings":"SERVICE SECTOR > Adding info to medical codes","what":"If an event/row uses more than one medical code","title":"USING BIGRQUERY PACKAGE: Adding names to longitudinal, service sector, or lab codes","text":"events include one medical code, one way understand medical code. Parameters fg_bq_append_code_info_to_longitudinal_data allows chose name medical code situations. example: PURCH_map_to = “VNR”, tells use VNR code PURCH register, instead default ATC ICD10fi_map_to = “CODE1”, tells use first code ICD10fi, instead default CODE1*CODE2 combination code Se help, options","code":"event_for_subject_1_with_translations <- fg_bq_append_code_info_to_longitudinal_data(   project_id, event_for_subject_1, fg_codes_info_table,      PURCH_map_to = \"VNR\",      ICD10fi_map_to = \"CODE1\" ) one_patient_long_data <- bq_table_download(event_for_subject_1_with_translations) bq_table_download(event_for_subject_1_with_translations) |>     dplyr::select(FINNGENID, SOURCE, APPROX_EVENT_DAY, CODE1, CODE2, CODE3, code, name_en, name_fi, omop_concept_id)  #> # A tibble: 20 × 10 #>    FINNGENID  SOURCE   APPROX_EVENT_DAY CODE1  CODE2 CODE3 code  name_en name_fi #>    <chr>      <chr>    <date>           <chr>  <chr> <chr> <chr> <chr>   <chr>   #>  1 FG00000001 PRIM_OUT 2023-06-20       WYA05  NA    NA    WYA05 Emerge… Ensiap… #>  2 FG00000001 OUTPAT   2023-05-22       N3282  NA    NA    N32.… Instab… Virtsa… #>  3 FG00000001 OUTPAT   2023-05-22       C5041  NA    NA    C50.… Malign… Rinnan… #>  4 FG00000001 OUTPAT   2023-05-22       F03    NA    NA    F03   Unspec… NA      #>  5 FG00000001 OUTPAT   2023-05-22       C5691  NA    NA    C56.… Malign… Munasa… #>  6 FG00000001 OUTPAT   2023-05-22       G564   G564  NA    G56.4 Causal… NA      #>  7 FG00000001 OUTPAT   2023-05-22       Z992   NA    NA    Z99.2 Depend… NA      #>  8 FG00000001 OUTPAT   2023-05-22       M069   NA    NA    M06.9 Rheuma… NA      #>  9 FG00000001 OUTPAT   2023-05-22       W06    NA    NA    W06   Fall i… NA      #> 10 FG00000001 OUTPAT   2023-05-22       F4322  NA    NA    F43.… Adapta… Sopeut… #> 11 FG00000001 PRIM_OUT 2023-03-24       WX290  NA    NA    WX290 Other … Muu jo… #> 12 FG00000001 PRIM_OUT 2023-03-21       NH3BA  NA    NA    NA    NA      NA      #> 13 FG00000001 PRIM_OUT 2023-03-21       SPAT1… NA    NA    SPAT… Admini… Lääkke… #> 14 FG00000001 PRIM_OUT 2023-03-21       Z012   NA    NA    Z01.2 Dental… NA      #> 15 FG00000001 PRIM_OUT 2023-03-03       L40    NA    NA    L40   Psoria… NA      #> 16 FG00000001 PURCH    2022-12-31       A12BA… 205   3983… 3983… DUREKA… DUREKA… #> 17 FG00000001 PURCH    2022-12-25       L04AD… 127   4675… 4675… SANDIM… SANDIM… #> 18 FG00000001 PRIM_OUT 2022-12-25       SPAT1… NA    NA    SPAT… No pro… Ei toi… #> 19 FG00000001 PRIM_OUT 2022-12-25       SPAT1… NA    NA    SPAT… No pro… Ei toi… #> 20 FG00000001 PRIM_OUT 2022-12-25       M750   NA    NA    M75.0 Adhesi… NA      #> # ℹ 1 more variable: omop_concept_id <chr> ?fg_append_code_info_to_longitudinal_data_sql"},{"path":"https://finngen.github.io/FinnGenUtilsR/articles/tutorial_add_info_bigrquery.html","id":"reduce-code-precision","dir":"Articles","previous_headings":"SERVICE SECTOR > Adding info to medical codes","what":"Reduce code precision","title":"USING BIGRQUERY PACKAGE: Adding names to longitudinal, service sector, or lab codes","text":"ICD10fi, ICD9fi, ICD8fi, ATC, NCSPfi, code systems reflect hierarchy code first letters . possible truncate medical codes information added. practice adds code names parent codes. can see column code truncated code name_en name truncated code.","code":"event_for_subject_1_with_translations <- fg_bq_append_code_info_to_longitudinal_data(   project_id, event_for_subject_1, fg_codes_info_table,    ICD10fi_precision = 3,   ICD9fi_precision = 3,   ICD8fi_precision = 3,   ATC_precision = 3,   NCSPfi_precision = 2 ) bq_table_download(event_for_subject_1_with_translations) |>     dplyr::select(FINNGENID, SOURCE, APPROX_EVENT_DAY, CODE1, CODE2, CODE3, code, name_en, name_fi, omop_concept_id)  #> # A tibble: 20 × 10 #>    FINNGENID  SOURCE   APPROX_EVENT_DAY CODE1  CODE2 CODE3 code  name_en name_fi #>    <chr>      <chr>    <date>           <chr>  <chr> <chr> <chr> <chr>   <chr>   #>  1 FG00000001 PRIM_OUT 2023-06-20       WYA05  NA    NA    WY    Käynti… Käynti… #>  2 FG00000001 OUTPAT   2023-05-22       N3282  NA    NA    N32   Other … NA      #>  3 FG00000001 OUTPAT   2023-05-22       C5041  NA    NA    C50   Malign… NA      #>  4 FG00000001 OUTPAT   2023-05-22       F03    NA    NA    F03   Unspec… NA      #>  5 FG00000001 OUTPAT   2023-05-22       C5691  NA    NA    C56   Malign… NA      #>  6 FG00000001 OUTPAT   2023-05-22       G564   G564  NA    G56   Monone… NA      #>  7 FG00000001 OUTPAT   2023-05-22       Z992   NA    NA    Z99   Depend… NA      #>  8 FG00000001 OUTPAT   2023-05-22       M069   NA    NA    M06   Other … NA      #>  9 FG00000001 OUTPAT   2023-05-22       W06    NA    NA    W06   Fall i… NA      #> 10 FG00000001 OUTPAT   2023-05-22       F4322  NA    NA    F43   Reacti… NA      #> 11 FG00000001 PRIM_OUT 2023-03-24       WX290  NA    NA    WX    Anaest… Aneste… #> 12 FG00000001 PRIM_OUT 2023-03-21       NH3BA  NA    NA    NA    NA      NA      #> 13 FG00000001 PRIM_OUT 2023-03-21       SPAT1… NA    NA    SPAT… Admini… Lääkke… #> 14 FG00000001 PRIM_OUT 2023-03-21       Z012   NA    NA    Z01   Other … NA      #> 15 FG00000001 PRIM_OUT 2023-03-03       L40    NA    NA    L40   Psoria… NA      #> 16 FG00000001 PURCH    2022-12-31       A12BA… 205   3983… A12   MINERA… NA      #> 17 FG00000001 PURCH    2022-12-25       L04AD… 127   4675… L04   IMMUNO… NA      #> 18 FG00000001 PRIM_OUT 2022-12-25       SPAT1… NA    NA    SPAT… No pro… Ei toi… #> 19 FG00000001 PRIM_OUT 2022-12-25       SPAT1… NA    NA    SPAT… No pro… Ei toi… #> 20 FG00000001 PRIM_OUT 2022-12-25       M750   NA    NA    M75   Should… NA      #> # ℹ 1 more variable: omop_concept_id <chr>"},{"path":"https://finngen.github.io/FinnGenUtilsR/articles/tutorial_add_info_bigrquery.html","id":"adding-info-to-visit-type","dir":"Articles","previous_headings":"SERVICE SECTOR","what":"Adding info to visit type","title":"USING BIGRQUERY PACKAGE: Adding names to longitudinal, service sector, or lab codes","text":"Function fg_bq_append_visit_type_info_to_service_sector_data adds new columns information visit type. service-sector data, information visit type defined CODE5 CODE9 depending SOURCE time period. fg_bq_append_visit_type_info_to_service_sector_data abstracts nuances, assign one visit type code per row. Notice visit may contain one event/row. Events/rows belonging visit share combination SOURCE+INDEX. default, fg_bq_append_visit_type_info_to_service_sector_data also include two columns is_clinic_visit is_follow_up_visit TRUE visit clinic visit follow-visit, respectively. However, works fg_codes_info_table version v7 higher. need use lower versions set parameters add_is_clinic_visist add_is_follow_up_visit FALSE. See help details.","code":"event_for_subject_1_with_visit_type <- fg_bq_append_visit_type_info_to_service_sector_data(   project_id, event_for_subject_1, fg_codes_info_table   ) bigrquery::bq_table_download(event_for_subject_1_with_visit_type) |>    dplyr::select(FINNGENID, SOURCE, INDEX, APPROX_EVENT_DAY, CODE5, CODE6, CODE8, CODE9, visit_type_code, visit_type_name_en, is_clinic_visit, is_follow_up_visit) #> # A tibble: 20 × 12 #>    FINNGENID  SOURCE   INDEX APPROX_EVENT_DAY CODE5 CODE6 CODE8 CODE9 #>    <chr>      <chr>    <chr> <date>           <chr> <chr> <chr> <chr> #>  1 FG00000001 PRIM_OUT 24    2023-03-21       R10   T60   NA    NA    #>  2 FG00000001 PRIM_OUT 24    2023-03-21       R10   T60   NA    NA    #>  3 FG00000001 PRIM_OUT 24    2023-03-21       R10   T60   NA    NA    #>  4 FG00000001 PRIM_OUT 99    2022-12-25       R20   T41   NA    NA    #>  5 FG00000001 PRIM_OUT 99    2022-12-25       R20   T41   NA    NA    #>  6 FG00000001 PRIM_OUT 99    2022-12-25       R20   T41   NA    NA    #>  7 FG00000001 OUTPAT   97    2023-05-22       NA    80A   R52   E     #>  8 FG00000001 OUTPAT   97    2023-05-22       NA    80A   R52   E     #>  9 FG00000001 OUTPAT   97    2023-05-22       NA    80A   R52   E     #> 10 FG00000001 OUTPAT   97    2023-05-22       NA    80A   R52   E     #> 11 FG00000001 OUTPAT   97    2023-05-22       NA    80A   R52   E     #> 12 FG00000001 OUTPAT   97    2023-05-22       NA    80A   R52   E     #> 13 FG00000001 OUTPAT   97    2023-05-22       NA    80A   R52   E     #> 14 FG00000001 OUTPAT   97    2023-05-22       NA    80A   R52   E     #> 15 FG00000001 OUTPAT   97    2023-05-22       NA    80A   R52   E     #> 16 FG00000001 PURCH    89    2022-12-31       NA    NA    NA    NA    #> 17 FG00000001 PURCH    68    2022-12-25       NA    NA    NA    NA    #> 18 FG00000001 PRIM_OUT 273   2023-03-03       R50   T11   NA    NA    #> 19 FG00000001 PRIM_OUT 326   2023-06-20       R10   T11   NA    NA    #> 20 FG00000001 PRIM_OUT 287   2023-03-24       R10   T11   NA    NA    #> # ℹ 4 more variables: visit_type_code <chr>, visit_type_name_en <chr>, #> #   is_clinic_visit <lgl>, is_follow_up_visit <lgl>"},{"path":"https://finngen.github.io/FinnGenUtilsR/articles/tutorial_add_info_bigrquery.html","id":"adding-info-to-provider-type","dir":"Articles","previous_headings":"SERVICE SECTOR","what":"Adding info to provider type","title":"USING BIGRQUERY PACKAGE: Adding names to longitudinal, service sector, or lab codes","text":"Function fg_bq_append_provider_info_to_service_sector_data adds new columns information personal unit provided diagnose visit. service-sector data, information provider defined CODE6 CODE7 depending SOURCE. fg_bq_append_visit_type_info_to_service_sector_data abstracts nuances, assign one provider type code per row.","code":"event_for_subject_1_with_provider <- fg_bq_append_provider_info_to_service_sector_data(   project_id, event_for_subject_1, fg_codes_info_table   ) bigrquery::bq_table_download(event_for_subject_1_with_provider) |>    dplyr::select(FINNGENID, SOURCE, INDEX, APPROX_EVENT_DAY, CODE5, CODE6, CODE8, CODE9, provider_code, provider_name_en, provider_concept_class_id) #> # A tibble: 20 × 11 #>    FINNGENID SOURCE INDEX APPROX_EVENT_DAY CODE5 CODE6 CODE8 CODE9 provider_code #>    <chr>     <chr>  <chr> <date>           <chr> <chr> <chr> <chr> <chr>         #>  1 FG000000… PURCH  89    2022-12-31       NA    NA    NA    NA    NA            #>  2 FG000000… PURCH  68    2022-12-25       NA    NA    NA    NA    NA            #>  3 FG000000… PRIM_… 326   2023-06-20       R10   T11   NA    NA    NA            #>  4 FG000000… PRIM_… 99    2022-12-25       R20   T41   NA    NA    51321         #>  5 FG000000… PRIM_… 99    2022-12-25       R20   T41   NA    NA    51321         #>  6 FG000000… PRIM_… 99    2022-12-25       R20   T41   NA    NA    51321         #>  7 FG000000… OUTPAT 97    2023-05-22       NA    80A   R52   E     80A           #>  8 FG000000… OUTPAT 97    2023-05-22       NA    80A   R52   E     80A           #>  9 FG000000… OUTPAT 97    2023-05-22       NA    80A   R52   E     80A           #> 10 FG000000… OUTPAT 97    2023-05-22       NA    80A   R52   E     80A           #> 11 FG000000… OUTPAT 97    2023-05-22       NA    80A   R52   E     80A           #> 12 FG000000… OUTPAT 97    2023-05-22       NA    80A   R52   E     80A           #> 13 FG000000… OUTPAT 97    2023-05-22       NA    80A   R52   E     80A           #> 14 FG000000… OUTPAT 97    2023-05-22       NA    80A   R52   E     80A           #> 15 FG000000… OUTPAT 97    2023-05-22       NA    80A   R52   E     80A           #> 16 FG000000… PRIM_… 24    2023-03-21       R10   T60   NA    NA    2222          #> 17 FG000000… PRIM_… 24    2023-03-21       R10   T60   NA    NA    2222          #> 18 FG000000… PRIM_… 24    2023-03-21       R10   T60   NA    NA    2222          #> 19 FG000000… PRIM_… 273   2023-03-03       R50   T11   NA    NA    32311         #> 20 FG000000… PRIM_… 287   2023-03-24       R10   T11   NA    NA    32311         #> # ℹ 2 more variables: provider_name_en <chr>, provider_concept_class_id <chr>"},{"path":[]},{"path":"https://finngen.github.io/FinnGenUtilsR/articles/tutorial_add_info_bigrquery.html","id":"generate-a-table-in-service-sector-format-1","dir":"Articles","previous_headings":"KANTA LAB DATA","what":"Generate a table in service sector format","title":"USING BIGRQUERY PACKAGE: Adding names to longitudinal, service sector, or lab codes","text":"example create subset main service sector table querying latest 20 events subject “FG00000001”: can see table currently information OMOP_CONCEPT_ID:","code":"sql <- paste(\"SELECT * FROM \", kanta_lab_data_table, \"WHERE FINNGENID='FG00000001' ORDER BY APPROX_EVENT_DATETIME DESC LIMIT 20\") kanta_events_for_subject_1 <- bq_project_query(project_id, sql) bq_table_download(kanta_events_for_subject_1) #> # A tibble: 20 × 19 #>    FINNGENID  EVENT_AGE APPROX_EVENT_DATETIME TEST_NAME  TEST_ID OMOP_CONCEPT_ID #>    <chr>          <dbl> <dttm>                <chr>      <chr>             <int> #>  1 FG00000001      71.7 2022-12-07 12:07:00   pt-gfre    656400               -1 #>  2 FG00000001      71.6 2022-11-04 16:18:00   p-crp      1605013         3020460 #>  3 FG00000001      71.6 2022-10-17 12:00:11   b-trom     3002791         3007461 #>  4 FG00000001      71.6 2022-10-15 07:01:00   e-mchc     1557            3003338 #>  5 FG00000001      71.5 2022-09-22 11:53:00   e-mchc     1557            3003338 #>  6 FG00000001      71.5 2022-09-12 12:03:00   s-ca-ion   9010            3016431 #>  7 FG00000001      71.5 2022-09-07 06:00:00   b-trom     2791            3007461 #>  8 FG00000001      71.4 2022-08-31 17:39:14   u-eryt     11344           3002582 #>  9 FG00000001      71.4 2022-08-26 08:57:00   e-mchc     1557            3003338 #> 10 FG00000001      71.4 2022-08-22 08:32:00   b-eryt     1101341         3026361 #> 11 FG00000001      71.4 2022-08-18 07:00:00   b-trom     2791            3007461 #> 12 FG00000001      71.4 2022-08-04 07:26:00   b-hba1c    6128            3004410 #> 13 FG00000001      71.4 2022-08-03 08:52:00   p-krea     2142                 -1 #> 14 FG00000001      71.3 2022-07-18 07:07:00   -h-ind     20536                -1 #> 15 FG00000001      71.3 2022-07-18 04:45:00   b-trom     2791            3007461 #> 16 FG00000001      71.3 2022-06-20 08:40:00   b-eryt     1341            3026361 #> 17 FG00000001      71.2 2022-06-16 10:23:00   p-k        1999            3023103 #> 18 FG00000001      71.2 2022-06-15 09:02:00   b-trom     2791            3007461 #> 19 FG00000001      71.2 2022-06-02 07:31:00   p-afos     4587            3035995 #> 20 FG00000001      71.1 2022-05-09 00:22:00   pt-gluk-r1 6001483              -1 #> # ℹ 13 more variables: MEASUREMENT_VALUE <dbl>, MEASUREMENT_UNIT <chr>, #> #   MEASUREMENT_VALUE_HARMONIZED <dbl>, MEASUREMENT_UNIT_HARMONIZED <chr>, #> #   TEST_OUTCOME <chr>, MEASUREMENT_STATUS <chr>, #> #   REFERENCE_RANGE_LOW_VALUE <dbl>, REFERENCE_RANGE_HIGH_VALUE <dbl>, #> #   CODING_SYSTEM_OID <chr>, TEST_ID_SOURCE <chr>, TEST_NAME_SOURCE <chr>, #> #   MEASUREMENT_VALUE_SOURCE <dbl>, MEASUREMENT_UNIT_SOURCE <chr>"},{"path":"https://finngen.github.io/FinnGenUtilsR/articles/tutorial_add_info_bigrquery.html","id":"adding-info-to-omop_concept_id-codes","dir":"Articles","previous_headings":"KANTA LAB DATA","what":"Adding info to OMOP_CONCEPT_ID codes","title":"USING BIGRQUERY PACKAGE: Adding names to longitudinal, service sector, or lab codes","text":"Function fg_bq_append_concept_info_data adds new column information OMOP_CONCEPT_ID name.","code":"event_for_subject_1_with_translations <- fg_bq_append_concept_info_data(   project_id, kanta_events_for_subject_1, omop_schema) bq_table_download(event_for_subject_1_with_translations) |>     dplyr::select(FINNGENID, EVENT_AGE, APPROX_EVENT_DATETIME, TEST_NAME,  TEST_ID, OMOP_CONCEPT_ID, omop_concept_name)  #> # A tibble: 20 × 7 #>    FINNGENID  EVENT_AGE APPROX_EVENT_DATETIME TEST_NAME  TEST_ID OMOP_CONCEPT_ID #>    <chr>          <dbl> <dttm>                <chr>      <chr>             <int> #>  1 FG00000001      71.4 2022-08-22 08:32:00   b-eryt     1101341         3026361 #>  2 FG00000001      71.3 2022-06-20 08:40:00   b-eryt     1341            3026361 #>  3 FG00000001      71.2 2022-06-16 10:23:00   p-k        1999            3023103 #>  4 FG00000001      71.2 2022-06-02 07:31:00   p-afos     4587            3035995 #>  5 FG00000001      71.6 2022-11-04 16:18:00   p-crp      1605013         3020460 #>  6 FG00000001      71.4 2022-08-31 17:39:14   u-eryt     11344           3002582 #>  7 FG00000001      71.6 2022-10-17 12:00:11   b-trom     3002791         3007461 #>  8 FG00000001      71.5 2022-09-07 06:00:00   b-trom     2791            3007461 #>  9 FG00000001      71.4 2022-08-18 07:00:00   b-trom     2791            3007461 #> 10 FG00000001      71.3 2022-07-18 04:45:00   b-trom     2791            3007461 #> 11 FG00000001      71.2 2022-06-15 09:02:00   b-trom     2791            3007461 #> 12 FG00000001      71.5 2022-09-12 12:03:00   s-ca-ion   9010            3016431 #> 13 FG00000001      71.7 2022-12-07 12:07:00   pt-gfre    656400               -1 #> 14 FG00000001      71.4 2022-08-03 08:52:00   p-krea     2142                 -1 #> 15 FG00000001      71.3 2022-07-18 07:07:00   -h-ind     20536                -1 #> 16 FG00000001      71.1 2022-05-09 00:22:00   pt-gluk-r1 6001483              -1 #> 17 FG00000001      71.4 2022-08-04 07:26:00   b-hba1c    6128            3004410 #> 18 FG00000001      71.6 2022-10-15 07:01:00   e-mchc     1557            3003338 #> 19 FG00000001      71.5 2022-09-22 11:53:00   e-mchc     1557            3003338 #> 20 FG00000001      71.4 2022-08-26 08:57:00   e-mchc     1557            3003338 #> # ℹ 1 more variable: omop_concept_name <chr>"},{"path":"https://finngen.github.io/FinnGenUtilsR/articles/tutorial_connection_handler.html","id":"configuration","dir":"Articles","previous_headings":"","what":"Configuration","title":"Tutorial connection to FinnGen BQ tables using FGconnectionHandler","text":"Similarly fg_get_cdm_config (see vignette), can use fg_get_bq_config produce connection configuration based sandbox number, data Freeze want use. environment: can find sandbox number looking URL browser connected sandbox.  dataFreezeNumber: time writing data freeze can 6, 7, 8, 9, 10, 11, 12, data freeze.","code":"config <- fg_get_bq_config(    environment = \"sandbox-6\",    dataFreezeNumber = 12    ) #> Set option sqlRenderTempEmulationSchema = 'fg-production-sandbox-6.sandbox'"},{"path":"https://finngen.github.io/FinnGenUtilsR/articles/tutorial_connection_handler.html","id":"create-fgconnectionhandler-object","dir":"Articles","previous_headings":"","what":"Create FGconnectionHandler object","title":"Tutorial connection to FinnGen BQ tables using FGconnectionHandler","text":"convenience one can use function create_fg_connection_handler_FromList generate FGconnectionHandler object connection configuration fg_get_bq_config. FGconnectionHandler object manage connection FinnGen tables BQ. First thing check status connection. FGdb$connectionStatusLog shows connection correct, also tempEmulationSchema works, tables sandboxToolsSchema medicalCodesSchema scheme, checks connection established, possible create temporary tables, gets list tables sandboxToolsSchema medicalCodesSchema scheme.","code":"FGconnectionHandler <- create_fg_connection_handler_FromList(config) #> Connecting using BigQuery driver #> Created a temporary table named #cars #> Inserting data took 0.00922 secs #> Dropping tables 't3m34o84cars' from schema 'atlas-development-270609.sandbox'. #>   |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100% #> Executing SQL took 2.17 secs FGconnectionHandler$connectionStatusLog #> # A tibble: 4 × 4 #>   databaseName     type    step                          message                 #>   <chr>            <fct>   <chr>                         <chr>                   #> 1 atlasDevelopment SUCCESS Check database connection     Valid connection        #> 2 atlasDevelopment SUCCESS Check temp table creation     can create temp tables  #> 3 atlasDevelopment SUCCESS sandboxToolsSchema connection Connected to tables: b… #> 4 atlasDevelopment SUCCESS medicalCodesSchema connection Connected to tables: f…"},{"path":"https://finngen.github.io/FinnGenUtilsR/articles/tutorial_connection_handler.html","id":"using-fgconnectionhandler","dir":"Articles","previous_headings":"","what":"Using FGconnectionHandler","title":"Tutorial connection to FinnGen BQ tables using FGconnectionHandler","text":"FGdb$connectionStatusLog contains list existing table sandboxToolsSchema medicalCodesSchema scheme. recommended use latest version tables. Tables sandboxToolsSchema andmedicalCodesSchema can used tibbles thanks dbplyr. moment writing allow use str_detect work around inject sql statement instead (notice SQL based BQ, SqlRender dialect based mostly MSsqlServer) example can plot age smoking status subjects asthma diagnose: get asthma subjects filtering service sector data, join finngen_info data get smoke2, smoke3","code":"FGconnectionHandler$getTblsandboxToolsSchema |> names() #> [1] \"birth_mother_r12_v1\"                                 #> [2] \"code_counts_r12_v1\"                                  #> [3] \"code_prevalence_stratified_r12_v1\"                   #> [4] \"endpoint_cohorts_r12_v1\"                             #> [5] \"finngen_r12_service_sector_detailed_longitudinal_v1\" #> [6] \"kanta_r12_v1\"                                        #> [7] \"kidney_r12_v1\"                                       #> [8] \"minimum_extended_r12_v1\"                             #> [9] \"vision_r12_v1\" # get events with code \"J45\" in INPAT FGconnectionHandler$getTblsandboxToolsSchema$finngen_r12_service_sector_detailed_longitudinal_v1() |>    dplyr::filter(code1 == \"J45\" & source == \"INPAT\") #> Note: method with signature 'DBIConnection#SQL' chosen for function 'dbQuoteIdentifier', #>  target signature 'DatabaseConnectorJdbcConnection#SQL'. #>  \"DatabaseConnectorConnection#character\" would also be valid #> # Source:   SQL [0 x 16] #> # Database: DatabaseConnectorJdbcConnection #> # ℹ 16 variables: finngenid <chr>, source <chr>, event_age <dbl>, #> #   approx_event_day <date>, code1 <chr>, code2 <chr>, code3 <chr>, #> #   code4 <chr>, code5 <chr>, code6 <chr>, code7 <chr>, code8 <chr>, #> #   code9 <chr>, icdver <chr>, category <chr>, index <chr> # get events with code \"J45\" and descendants FGconnectionHandler$getTblsandboxToolsSchema$finngen_r12_service_sector_detailed_longitudinal_v1() |>    dplyr::filter(stringr::str_detect(code1, \"^J45\")) #> Error in `stringr::str_detect()`: #> ! Only fixed patterns are supported on database backends. # get events with code \"J45\" and descendants FGconnectionHandler$getTblsandboxToolsSchema$finngen_r12_service_sector_detailed_longitudinal_v1() |>    dplyr::filter(dplyr::sql(\"code1 LIKE 'J45%'\")) #> # Source:   SQL [?? x 16] #> # Database: DatabaseConnectorJdbcConnection #>    finngenid  source   event_age approx_event_day code1 code2 code3 code4 code5 #>    <chr>      <chr>        <dbl> <date>           <chr> <chr> <chr> <chr> <chr> #>  1 FG00000014 OUTPAT        35.8 2019-01-04       J450  NA    NA    NA    NA    #>  2 FG00000025 OUTPAT        43.9 2014-08-15       J450  NA    NA    NA    93    #>  3 FG00000094 PRIM_OUT      78.5 2020-04-24       J45   NA    NA    NA    R10   #>  4 FG00000163 OUTPAT        38.3 2021-04-04       J459  NA    NA    NA    NA    #>  5 FG00001268 OUTPAT        68.5 2019-01-22       J459  NA    NA    NA    NA    #>  6 FG00001965 OUTPAT        78.5 2021-01-27       J458  NA    NA    NA    NA    #>  7 FG00002117 OUTPAT        68   2020-09-08       J459  NA    NA    NA    NA    #>  8 FG00002304 OUTPAT        53.1 2016-08-09       J459  NA    NA    NA    93    #>  9 FG00001123 DEATH         72.4 2000-12-22       J459  NA    NA    NA    NA    #> 10 FG00001762 DEATH         76.6 1998-12-30       J459  NA    NA    NA    NA    #> # ℹ more rows #> # ℹ 7 more variables: code6 <chr>, code7 <chr>, code8 <chr>, code9 <chr>, #> #   icdver <chr>, category <chr>, index <chr> FGconnectionHandler$getTblsandboxToolsSchema$finngen_r12_service_sector_detailed_longitudinal_v1() |>    dplyr::filter(dplyr::sql(\"code1 LIKE 'J45%'\"))|>    dplyr::distinct(finngenid) |>    dplyr::left_join(     FGconnectionHandler$getTblsandboxToolsSchema$minimum_extended_r12_v1(),      by = \"finngenid\"   ) |>    dplyr::count(smoke2, smoke3, sort = T) #> # Source:     SQL [?? x 3] #> # Database:   DatabaseConnectorJdbcConnection #> # Ordered by: desc(n) #>    smoke2 smoke3      n #>    <chr>  <chr>   <dbl> #>  1 no     NA      43697 #>  2 NA     NA      35806 #>  3 no     never   32092 #>  4 NA     never   26376 #>  5 no     current 16633 #>  6 yes    NA      15056 #>  7 no     former  14323 #>  8 NA     current 13433 #>  9 NA     former  11891 #> 10 yes    never   11303 #> # ℹ more rows"},{"path":"https://finngen.github.io/FinnGenUtilsR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Javier Gracia-Tabuenca. Author, maintainer.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gracia-Tabuenca J (2024). FinnGenUtilsR: FinnGenUtilsR. R package version 3.1.0, https://finngen.github.io/FinnGenUtilsR/.","code":"@Manual{,   title = {FinnGenUtilsR: FinnGenUtilsR},   author = {Javier Gracia-Tabuenca},   year = {2024},   note = {R package version 3.1.0},   url = {https://finngen.github.io/FinnGenUtilsR/}, }"},{"path":"https://finngen.github.io/FinnGenUtilsR/index.html","id":"finngenutilsr","dir":"","previous_headings":"","what":"FinnGenUtilsR","title":"FinnGenUtilsR","text":"R package common functions work FinnGen data inside Sandbox (FinnGen’s secure environment).","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"FinnGenUtilsR","text":"package available local CRAN FinnGen Sandbox. can installed package R:","code":"install.packages(\"FinnGenUtilsR\")"},{"path":"https://finngen.github.io/FinnGenUtilsR/index.html","id":"functionality","dir":"","previous_headings":"","what":"Functionality","title":"FinnGenUtilsR","text":"Easy calculation connection parameters connect FinnGen BigQuery databases object FGconnectionHandler connect FinnGen BigQuery databases work tables dataframes Working Bigrquery Working dbplyr","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"FinnGenUtilsR","text":"See vignettes articles github-page","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/LogTibble.html","id":null,"dir":"Reference","previous_headings":"","what":"LogTibble — LogTibble","title":"LogTibble — LogTibble","text":"Class managing log messages tibble.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/LogTibble.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"LogTibble — LogTibble","text":"logTibble get tibble","code":""},{"path":[]},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/LogTibble.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"LogTibble — LogTibble","text":"LogTibble$new() LogTibble$addLog() LogTibble$INFO() LogTibble$WARNING() LogTibble$ERROR() LogTibble$SUCCESS() LogTibble$print() LogTibble$clone()","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/LogTibble.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"LogTibble — LogTibble","text":"Initializes new LogTibble object. addLog","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/LogTibble.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LogTibble — LogTibble","text":"","code":"LogTibble$new()"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/LogTibble.html","id":"method-addlog-","dir":"Reference","previous_headings":"","what":"Method addLog()","title":"LogTibble — LogTibble","text":"Adds log message log tibble.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/LogTibble.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"LogTibble — LogTibble","text":"","code":"LogTibble$addLog(type, step, message, ...)"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/LogTibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LogTibble — LogTibble","text":"type Type log message (\"INFO\", \"WARNING\", \"ERROR\", \"SUCCESS\") step Step description associated log message message Log message content ... Additional parameters message formatting INFO","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/LogTibble.html","id":"method-info-","dir":"Reference","previous_headings":"","what":"Method INFO()","title":"LogTibble — LogTibble","text":"Adds informational log message log tibble.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/LogTibble.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"LogTibble — LogTibble","text":"","code":"LogTibble$INFO(step, message, ...)"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/LogTibble.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"LogTibble — LogTibble","text":"step Step description associated log message message Log message content ... Additional parameters message formatting WARNING","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/LogTibble.html","id":"method-warning-","dir":"Reference","previous_headings":"","what":"Method WARNING()","title":"LogTibble — LogTibble","text":"Adds warning log message log tibble.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/LogTibble.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"LogTibble — LogTibble","text":"","code":"LogTibble$WARNING(step, message, ...)"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/LogTibble.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"LogTibble — LogTibble","text":"step Step description associated log message message Log message content ... Additional parameters message formatting ERROR","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/LogTibble.html","id":"method-error-","dir":"Reference","previous_headings":"","what":"Method ERROR()","title":"LogTibble — LogTibble","text":"Adds error log message log tibble.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/LogTibble.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"LogTibble — LogTibble","text":"","code":"LogTibble$ERROR(step, message, ...)"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/LogTibble.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"LogTibble — LogTibble","text":"step Step description associated log message message Log message content ... Additional parameters message formatting SUCCESS","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/LogTibble.html","id":"method-success-","dir":"Reference","previous_headings":"","what":"Method SUCCESS()","title":"LogTibble — LogTibble","text":"Adds error log message log tibble.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/LogTibble.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"LogTibble — LogTibble","text":"","code":"LogTibble$SUCCESS(step, message, ...)"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/LogTibble.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"LogTibble — LogTibble","text":"step Step description associated log message message Log message content ... Additional parameters message formatting print","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/LogTibble.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"LogTibble — LogTibble","text":"prints log.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/LogTibble.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"LogTibble — LogTibble","text":"","code":"LogTibble$print()"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/LogTibble.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"LogTibble — LogTibble","text":"objects class cloneable method.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/LogTibble.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"LogTibble — LogTibble","text":"","code":"LogTibble$clone(deep = FALSE)"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/LogTibble.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"LogTibble — LogTibble","text":"deep Whether make deep clone.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":null,"dir":"Reference","previous_headings":"","what":"ConnectionHandler — ResultModelManager_ConnectionHandler","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"Class handling DatabaseConnector:connection objects consistent R6 interfaces pooled non-pooled connections. Allows connection cleanly opened closed stored within class/object variables","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"DatabaseConnector Connection instance close Connection boolean TRUE connection valid queryDb boolean TRUE connection valid executeSql","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"connectionDetails DatabaseConnector connectionDetails object con DatabaseConnector connection object isActive connection active #' snakeCaseToCamelCase (Optional) Boolean. return results columns camel case (default)","code":""},{"path":[]},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"ResultModelManager_ConnectionHandler$new() ResultModelManager_ConnectionHandler$dbms() ResultModelManager_ConnectionHandler$tbl() ResultModelManager_ConnectionHandler$renderTranslateSql() ResultModelManager_ConnectionHandler$initConnection() ResultModelManager_ConnectionHandler$getConnection() ResultModelManager_ConnectionHandler$closeConnection() ResultModelManager_ConnectionHandler$finalize() ResultModelManager_ConnectionHandler$dbIsValid() ResultModelManager_ConnectionHandler$queryDb() ResultModelManager_ConnectionHandler$executeSql() ResultModelManager_ConnectionHandler$queryFunction() ResultModelManager_ConnectionHandler$executeFunction() ResultModelManager_ConnectionHandler$clone()","code":""},{"path":[]},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"","code":"ResultModelManager_ConnectionHandler$new(   connectionDetails,   loadConnection = TRUE,   snakeCaseToCamelCase = TRUE )"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"connectionDetails DatabaseConnector::connectionDetails class loadConnection Boolean option load connection right away snakeCaseToCamelCase (Optional) Boolean. return results columns camel case (default) get dbms","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"method-dbms-","dir":"Reference","previous_headings":"","what":"Method dbms()","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"Get dbms type connection get table","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"","code":"ResultModelManager_ConnectionHandler$dbms()"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"method-tbl-","dir":"Reference","previous_headings":"","what":"Method tbl()","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"get dplyr table object (.e. lazy loaded)","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"","code":"ResultModelManager_ConnectionHandler$tbl(table, databaseSchema = NULL)"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"table table name databaseSchema databaseSchema table belongs Render Translate Sql.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"method-rendertranslatesql-","dir":"Reference","previous_headings":"","what":"Method renderTranslateSql()","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"Masked call SqlRender","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"","code":"ResultModelManager_ConnectionHandler$renderTranslateSql(sql, ...)"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"sql Sql query string ... Elipsis initConnection","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"method-initconnection-","dir":"Reference","previous_headings":"","what":"Method initConnection()","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"Load connection Get Connection","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"","code":"ResultModelManager_ConnectionHandler$initConnection()"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"method-getconnection-","dir":"Reference","previous_headings":"","what":"Method getConnection()","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"Returns connection use standard DatabaseConnector calls. Connects automatically yet loaded","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"","code":"ResultModelManager_ConnectionHandler$getConnection()"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"method-closeconnection-","dir":"Reference","previous_headings":"","what":"Method closeConnection()","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"Closes connection (active) close Connection","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"","code":"ResultModelManager_ConnectionHandler$closeConnection()"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"method-finalize-","dir":"Reference","previous_headings":"","what":"Method finalize()","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"Closes connection (active) db Valid","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"","code":"ResultModelManager_ConnectionHandler$finalize()"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"method-dbisvalid-","dir":"Reference","previous_headings":"","what":"Method dbIsValid()","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"Masks call DBI::dbIsValid. Returns False connection NULL","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"","code":"ResultModelManager_ConnectionHandler$dbIsValid()"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"method-querydb-","dir":"Reference","previous_headings":"","what":"Method queryDb()","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"query database return resulting data.frame environment variable LIMIT_ROW_COUNT set Returned rows limited value (default) Limit row count intended web applications may cause denial service consume many resources.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"","code":"ResultModelManager_ConnectionHandler$queryDb(   sql,   snakeCaseToCamelCase = self$snakeCaseToCamelCase,   overrideRowLimit = FALSE,   ... )"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"sql sql query string snakeCaseToCamelCase (Optional) Boolean. return results columns camel case (default) overrideRowLimit (Optional) Boolean. cases, row limit enforced system may wish ignore . ... Additional query parameters","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"method-executesql-","dir":"Reference","previous_headings":"","what":"Method executeSql()","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"execute set database queries","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"","code":"ResultModelManager_ConnectionHandler$executeSql(sql, ...)"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"sql sql query string ... Additional query parameters query Function","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"method-queryfunction-","dir":"Reference","previous_headings":"","what":"Method queryFunction()","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"queryFunction can override subclasses (e.g. use different base function intercept query) translate render SQL.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"","code":"ResultModelManager_ConnectionHandler$queryFunction(   sql,   snakeCaseToCamelCase = self$snakeCaseToCamelCase )"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"sql SQL query string snakeCaseToCamelCase (Optional) Boolean. return results columns camel case (default) execute Function","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"method-executefunction-","dir":"Reference","previous_headings":"","what":"Method executeFunction()","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"exec query Function can override subclasses (e.g. use different base function intercept query) translate render SQL.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"","code":"ResultModelManager_ConnectionHandler$executeFunction(sql)"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"sql SQL query string","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"objects class cloneable method.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"","code":"ResultModelManager_ConnectionHandler$clone(deep = FALSE)"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_ConnectionHandler.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"ConnectionHandler — ResultModelManager_ConnectionHandler","text":"deep Whether make deep clone.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_createConnectionHandler.html","id":null,"dir":"Reference","previous_headings":"","what":"createConnectionHandler — ResultModelManager_createConnectionHandler","title":"createConnectionHandler — ResultModelManager_createConnectionHandler","text":"Creates connection handler object based provided connection details settings.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_createConnectionHandler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"createConnectionHandler — ResultModelManager_createConnectionHandler","text":"","code":"ResultModelManager_createConnectionHandler(   connectionDetailsSettings,   tempEmulationSchema = NULL,   useBigrqueryUpload = NULL,   usePooledConnection = FALSE,   ... )"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_createConnectionHandler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"createConnectionHandler — ResultModelManager_createConnectionHandler","text":"connectionDetailsSettings list connection details settings pass directly DatabaseConnector::createConnectionDetails. tempEmulationSchema temporary emulation schema (optional). useBigrqueryUpload Logical indicating whether use fast table upload bigquery (default FALSE) usePooledConnection Logical indicating whether use pooled connection (default FALSE). ... Additional arguments passed connection handler object.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/ResultModelManager_createConnectionHandler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"createConnectionHandler — ResultModelManager_createConnectionHandler","text":"connection handler object.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/createSandboxAPIConnection.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — createSandboxAPIConnection","title":"FUNCTION_TITLE — createSandboxAPIConnection","text":"FUNCTION_DESCRIPTION","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/createSandboxAPIConnection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — createSandboxAPIConnection","text":"","code":"createSandboxAPIConnection(base_url, token)"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/createSandboxAPIConnection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — createSandboxAPIConnection","text":"base_url PARAM_DESCRIPTION token PARAM_DESCRIPTION","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/createSandboxAPIConnection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — createSandboxAPIConnection","text":"OUTPUT_DESCRIPTION","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/createSandboxAPIConnection.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FUNCTION_TITLE — createSandboxAPIConnection","text":"DETAILS","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/create_fg_connection_handler_FromList.html","id":null,"dir":"Reference","previous_headings":"","what":"createfg_connection_handlerFromList — create_fg_connection_handler_FromList","title":"createfg_connection_handlerFromList — create_fg_connection_handler_FromList","text":"function create fg_connection_handler object list configuration settings.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/create_fg_connection_handler_FromList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"createfg_connection_handlerFromList — create_fg_connection_handler_FromList","text":"","code":"create_fg_connection_handler_FromList(config)"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/create_fg_connection_handler_FromList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"createfg_connection_handlerFromList — create_fg_connection_handler_FromList","text":"config list containing configuration settings fg_connection_handler. databaseName: name database. connection: list connection details settings. cdm: list CDM database schema settings. cohortTable: name cohort table.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/create_fg_connection_handler_FromList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"createfg_connection_handlerFromList — create_fg_connection_handler_FromList","text":"fg_connection_handler object.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_append_code_info_to_longitudinal_data_sql.html","id":null,"dir":"Reference","previous_headings":"","what":"fg_append_code_info_to_longitudinal_data_sql — fg_append_code_info_to_longitudinal_data_sql","title":"fg_append_code_info_to_longitudinal_data_sql — fg_append_code_info_to_longitudinal_data_sql","text":"fg_append_code_info_to_longitudinal_data_sql","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_append_code_info_to_longitudinal_data_sql.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fg_append_code_info_to_longitudinal_data_sql — fg_append_code_info_to_longitudinal_data_sql","text":"","code":"fg_append_code_info_to_longitudinal_data_sql(   longitudinal_data_table,   fg_codes_info_table,   ICD10fi_map_to = \"CODE1_CODE2\",   PURCH_map_to = \"ATC\",   CANC_map_to = \"MORPO_BEH_TOPO\",   REIMB_map_to = \"REIMB\",   ICD10fi_precision = 5,   ICD9fi_precision = 5,   ICD8fi_precision = 5,   ATC_precision = 7,   NCSPfi_precision = 5,   new_colums_sufix = \"\" )"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_append_code_info_to_longitudinal_data_sql.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fg_append_code_info_to_longitudinal_data_sql — fg_append_code_info_to_longitudinal_data_sql","text":"longitudinal_data_table full path table longitudinal_data format fg_codes_info_table full path table codes info ICD10fi_map_to INPAT, OUTPAT, PRIM_OUT, DEATH registers ICD10fi combination codes split CODE1, CODE2 CODE3. parameter selects code combination codes map . Options: \"CODE1_CODE2\" : appends info combined CODE1 CODE2. e.g N0839*E112   (default). \"CODE1\" : appends info CODE1. e.g N0839 \"CODE2\" : appends info CODE2. e.g E112 \"ATC\" : appends info ATC code CODE3 column.  e.g N02BE01 PURCH_map_to PURCH register rows contain VNR code CODE2 column ATC group CODE1. parameter selects two codes append info. \"ATC\" : appends info ATC code CODE1 column. e.g. N02BE01   (default). \"REIMB\" :  appends info REIMB code CODE2 column. e.g. 205 \"VNR\" :  appends info VNR code CODE3 column. e.g. 003121 CANC_map_to CANC register ICDO3  codes split CODE1, CODE2 CODE3. parameter selects code combination codes map . \"MORPO_BEH_TOPO\" : appends info combined CODE1, CODE2 CODE3. e.g. 8140/3-C61.9  (default). \"TOPO\" : appends info TOPO code CODE1 column. e.g. C61.9 \"MORPO_BEH\" : appends info MORPHO code CODE2 column. e.g. 8140/3 REIMB_map_to REIMB register rows contain REIMB code , 1995, also ICD code leaded reimbursement. selects two codes map. \"REIMB\" : appends info REIMB code CODE1 column  (default). \"ICD\" : appends info ICD CODE1 column ICD10fi_precision Number leading codes ICD10fi map . e.g. N0839 ICD10fi_precision=3 N08  (default = 5) ICD9fi_precision Number leading codes ICD9fi map . e.g. 8450B ICD9fi_precision=3 845 (default = 5) ICD8fi_precision Number leading codes ICD8fi map . e.g. 36809 ICD8fi_precision=3 368 (default = 5) ATC_precision Number leading codes ATC map . e.g. N02BE01 ATC_precision=3 N02 (default = 7) NCSPfi_precision Number leading codes NOMESCO map . e.g. AB1CB  NCSPfi_precision=2 AB (default = 5) new_colums_sufix string indicating prefix add appended columns, default=\"\".","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_append_code_info_to_longitudinal_data_sql.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fg_append_code_info_to_longitudinal_data_sql — fg_append_code_info_to_longitudinal_data_sql","text":"sql script ready ran","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_append_concept_info_data_sql.html","id":null,"dir":"Reference","previous_headings":"","what":"fg_append_concept_info_data_sql — fg_append_concept_info_data_sql","title":"fg_append_concept_info_data_sql — fg_append_concept_info_data_sql","text":"fg_append_concept_info_data_sql","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_append_concept_info_data_sql.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fg_append_concept_info_data_sql — fg_append_concept_info_data_sql","text":"","code":"fg_append_concept_info_data_sql(data_table, omop_schema, new_colums_sufix = \"\")"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_append_concept_info_data_sql.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fg_append_concept_info_data_sql — fg_append_concept_info_data_sql","text":"data_table string full path (project.schema.table) bq table data omop_schema string schema omop tables stored new_colums_sufix string indicating prefix add appended columns, default=\"\".","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_append_concept_info_data_sql.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fg_append_concept_info_data_sql — fg_append_concept_info_data_sql","text":"sql script ready ran","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_append_provider_info_to_service_sector_data_sql.html","id":null,"dir":"Reference","previous_headings":"","what":"fg_append_provider_info_to_service_sector_data_sql — fg_append_provider_info_to_service_sector_data_sql","title":"fg_append_provider_info_to_service_sector_data_sql — fg_append_provider_info_to_service_sector_data_sql","text":"fg_append_provider_info_to_service_sector_data_sql","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_append_provider_info_to_service_sector_data_sql.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fg_append_provider_info_to_service_sector_data_sql — fg_append_provider_info_to_service_sector_data_sql","text":"","code":"fg_append_provider_info_to_service_sector_data_sql(   service_sector_data_table,   fg_codes_info_table,   new_colums_sufix = \"\" )"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_append_provider_info_to_service_sector_data_sql.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fg_append_provider_info_to_service_sector_data_sql — fg_append_provider_info_to_service_sector_data_sql","text":"service_sector_data_table full path table service_sector_data format fg_codes_info_table full path table codes info new_colums_sufix string indicating prefix add appended columns, default=\"\".","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_append_provider_info_to_service_sector_data_sql.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fg_append_provider_info_to_service_sector_data_sql — fg_append_provider_info_to_service_sector_data_sql","text":"sql script ready ran","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_append_visit_type_info_to_service_sector_data_sql.html","id":null,"dir":"Reference","previous_headings":"","what":"fg_append_visit_type_info_to_service_sector_data_sql — fg_append_visit_type_info_to_service_sector_data_sql","title":"fg_append_visit_type_info_to_service_sector_data_sql — fg_append_visit_type_info_to_service_sector_data_sql","text":"fg_append_visit_type_info_to_service_sector_data_sql","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_append_visit_type_info_to_service_sector_data_sql.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fg_append_visit_type_info_to_service_sector_data_sql — fg_append_visit_type_info_to_service_sector_data_sql","text":"","code":"fg_append_visit_type_info_to_service_sector_data_sql(   service_sector_data_table,   fg_codes_info_table,   prioritise_SRC_Contact_Urgency_over_SRC_Service_Sector = TRUE,   add_is_clinic_visist = TRUE,   add_is_follow_up_visit = TRUE,   new_colums_sufix = \"\" )"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_append_visit_type_info_to_service_sector_data_sql.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fg_append_visit_type_info_to_service_sector_data_sql — fg_append_visit_type_info_to_service_sector_data_sql","text":"service_sector_data_table full path table longitudinal_data format fg_codes_info_table full path table codes info prioritise_SRC_Contact_Urgency_over_SRC_Service_Sector hilmo visits including coding systems, SRC|ServiceSector SRC|Contact|Urgency, TRUE second used add_is_clinic_visist add column indicating visit clinic visit add_is_follow_up_visit add column indicating visit follow visit new_colums_sufix string indicating prefix add appended columns, default=\"\".","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_append_visit_type_info_to_service_sector_data_sql.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fg_append_visit_type_info_to_service_sector_data_sql — fg_append_visit_type_info_to_service_sector_data_sql","text":"sql script ready ran","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_bq_append_code_info_to_longitudinal_data.html","id":null,"dir":"Reference","previous_headings":"","what":"fg_bq_append_code_info_to_longitudinal_data — fg_bq_append_code_info_to_longitudinal_data","title":"fg_bq_append_code_info_to_longitudinal_data — fg_bq_append_code_info_to_longitudinal_data","text":"Wrap around fg_append_code_info_to_longitudinal_data_sql work bigrquery package","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_bq_append_code_info_to_longitudinal_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fg_bq_append_code_info_to_longitudinal_data — fg_bq_append_code_info_to_longitudinal_data","text":"","code":"fg_bq_append_code_info_to_longitudinal_data(   bq_project_id,   bq_table,   fg_codes_info_table,   ... )"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_bq_append_code_info_to_longitudinal_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fg_bq_append_code_info_to_longitudinal_data — fg_bq_append_code_info_to_longitudinal_data","text":"bq_project_id string bigquery project id bq_table object type <bq_table> table longitudinal_data format fg_codes_info_table string full path (project.schema.table) bq table fg_codes_info ... see fg_append_code_info_to_longitudinal_data_sql mapping options","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_bq_append_code_info_to_longitudinal_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fg_bq_append_code_info_to_longitudinal_data — fg_bq_append_code_info_to_longitudinal_data","text":"bq_table added columns","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_bq_append_concept_info_data.html","id":null,"dir":"Reference","previous_headings":"","what":"fg_bq_append_concept_info_data — fg_bq_append_concept_info_data","title":"fg_bq_append_concept_info_data — fg_bq_append_concept_info_data","text":"Wrap around fg_bq_append_concept_info_data_sql work bigrquery package","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_bq_append_concept_info_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fg_bq_append_concept_info_data — fg_bq_append_concept_info_data","text":"","code":"fg_bq_append_concept_info_data(bq_project_id, bq_table, omop_schema, ...)"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_bq_append_concept_info_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fg_bq_append_concept_info_data — fg_bq_append_concept_info_data","text":"bq_project_id string bigquery project id bq_table object type <bq_table> table longitudinal_data format omop_schema string schema omop tables stored ... see fg_append_concept_info_data_sql mapping options","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_bq_append_concept_info_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fg_bq_append_concept_info_data — fg_bq_append_concept_info_data","text":"bq_table added columns","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_bq_append_provider_info_to_service_sector_data.html","id":null,"dir":"Reference","previous_headings":"","what":"fg_bq_append_provider_info_to_service_sector_data — fg_bq_append_provider_info_to_service_sector_data","title":"fg_bq_append_provider_info_to_service_sector_data — fg_bq_append_provider_info_to_service_sector_data","text":"Wrap around fg_append_provider_info_to_service_sector_data_sql work bigrquery package","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_bq_append_provider_info_to_service_sector_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fg_bq_append_provider_info_to_service_sector_data — fg_bq_append_provider_info_to_service_sector_data","text":"","code":"fg_bq_append_provider_info_to_service_sector_data(   bq_project_id,   bq_table,   fg_codes_info_table,   ... )"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_bq_append_provider_info_to_service_sector_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fg_bq_append_provider_info_to_service_sector_data — fg_bq_append_provider_info_to_service_sector_data","text":"bq_project_id string bigquery project id bq_table object type <bq_table> table longitudinal_data format fg_codes_info_table string full path (project.schema.table) bq table fg_codes_info ... see fg_append_provider_info_to_service_sector_data_sql mapping options","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_bq_append_provider_info_to_service_sector_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fg_bq_append_provider_info_to_service_sector_data — fg_bq_append_provider_info_to_service_sector_data","text":"bq_table added columns","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_bq_append_visit_type_info_to_service_sector_data.html","id":null,"dir":"Reference","previous_headings":"","what":"fg_bq_append_visit_type_info_to_service_sector_data — fg_bq_append_visit_type_info_to_service_sector_data","title":"fg_bq_append_visit_type_info_to_service_sector_data — fg_bq_append_visit_type_info_to_service_sector_data","text":"Wrap around fg_append_visit_type_info_to_service_sector_data_sql work bigrquery package","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_bq_append_visit_type_info_to_service_sector_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fg_bq_append_visit_type_info_to_service_sector_data — fg_bq_append_visit_type_info_to_service_sector_data","text":"","code":"fg_bq_append_visit_type_info_to_service_sector_data(   bq_project_id,   bq_table,   fg_codes_info_table,   ... )"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_bq_append_visit_type_info_to_service_sector_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fg_bq_append_visit_type_info_to_service_sector_data — fg_bq_append_visit_type_info_to_service_sector_data","text":"bq_project_id string bigquery project id bq_table object type <bq_table> table longitudinal_data format fg_codes_info_table string full path (project.schema.table) bq table fg_codes_info ... see fg_append_visit_type_info_to_service_sector_data_sql mapping options","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_bq_append_visit_type_info_to_service_sector_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fg_bq_append_visit_type_info_to_service_sector_data — fg_bq_append_visit_type_info_to_service_sector_data","text":"bq_table added columns","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_connection_handler.html","id":null,"dir":"Reference","previous_headings":"","what":"fg_connection_handler — fg_connection_handler","title":"fg_connection_handler — fg_connection_handler","text":"Class handling database connection schema information CDM database","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_connection_handler.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"fg_connection_handler — fg_connection_handler","text":"databaseName text id database connects (read-). connectionHandler ConnectionHandler object managing database connection (read-). sandboxToolsSchema Name vocabulary database schema (read-). medicalCodesSchema Name CDM database schema (read-). connectionStatusLog Log tibble object storing connection status information (read-). getTblmedicalCodesSchema List functions create dbplyr table vocabulary tables (read-). getTblsandboxToolsSchema List functions create dbplyr table CDM tables (read-).","code":""},{"path":[]},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_connection_handler.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"fg_connection_handler — fg_connection_handler","text":"fg_connection_handler$new() fg_connection_handler$finalize() fg_connection_handler$loadConnection() fg_connection_handler$clone()","code":""},{"path":[]},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_connection_handler.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fg_connection_handler — fg_connection_handler","text":"","code":"fg_connection_handler$new(   databaseName,   connectionHandler,   medicalCodesSchema,   sandboxToolsSchema )"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_connection_handler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fg_connection_handler — fg_connection_handler","text":"databaseName text id database connects connectionHandler ConnectionHandler object medicalCodesSchema Name CDM database schema sandboxToolsSchema (Optional) Name vocabulary database schema (default medicalCodesSchema) Finalize method","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_connection_handler.html","id":"method-finalize-","dir":"Reference","previous_headings":"","what":"Method finalize()","title":"fg_connection_handler — fg_connection_handler","text":"Closes connection active. Reload connection","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_connection_handler.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"fg_connection_handler — fg_connection_handler","text":"","code":"fg_connection_handler$finalize()"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_connection_handler.html","id":"method-loadconnection-","dir":"Reference","previous_headings":"","what":"Method loadConnection()","title":"fg_connection_handler — fg_connection_handler","text":"Updates connection status checking database connection","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_connection_handler.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"fg_connection_handler — fg_connection_handler","text":"","code":"fg_connection_handler$loadConnection()"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_connection_handler.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"fg_connection_handler — fg_connection_handler","text":"objects class cloneable method.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_connection_handler.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"fg_connection_handler — fg_connection_handler","text":"","code":"fg_connection_handler$clone(deep = FALSE)"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_connection_handler.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"fg_connection_handler — fg_connection_handler","text":"deep Whether make deep clone.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_dbplyr_append_code_info_to_longitudinal_data.html","id":null,"dir":"Reference","previous_headings":"","what":"fg_dbplyr_append_code_info_to_longitudinal_data — fg_dbplyr_append_code_info_to_longitudinal_data","title":"fg_dbplyr_append_code_info_to_longitudinal_data — fg_dbplyr_append_code_info_to_longitudinal_data","text":"Wrap around fg_append_code_info_to_longitudinal_data_sql work dbplyr package","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_dbplyr_append_code_info_to_longitudinal_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fg_dbplyr_append_code_info_to_longitudinal_data — fg_dbplyr_append_code_info_to_longitudinal_data","text":"","code":"fg_dbplyr_append_code_info_to_longitudinal_data(   dbplyr_table,   dbplyr_fg_codes_info_table,   ... )"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_dbplyr_append_code_info_to_longitudinal_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fg_dbplyr_append_code_info_to_longitudinal_data — fg_dbplyr_append_code_info_to_longitudinal_data","text":"dbplyr_table object type  representing table longitudinal_data format dbplyr_fg_codes_info_table string full path (schema.table) database table fg_codes_info ... see fg_append_code_info_to_longitudinal_data_sql mapping options","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_dbplyr_append_code_info_to_longitudinal_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fg_dbplyr_append_code_info_to_longitudinal_data — fg_dbplyr_append_code_info_to_longitudinal_data","text":"added columns","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_dbplyr_append_concept_info_data.html","id":null,"dir":"Reference","previous_headings":"","what":"fg_dbplyr_append_concept_info_data — fg_dbplyr_append_concept_info_data","title":"fg_dbplyr_append_concept_info_data — fg_dbplyr_append_concept_info_data","text":"fg_dbplyr_append_concept_info_data","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_dbplyr_append_concept_info_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fg_dbplyr_append_concept_info_data — fg_dbplyr_append_concept_info_data","text":"","code":"fg_dbplyr_append_concept_info_data(dbplyr_table, omop_schema, ...)"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_dbplyr_append_concept_info_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fg_dbplyr_append_concept_info_data — fg_dbplyr_append_concept_info_data","text":"dbplyr_table tbl object data omop_schema string schema omop tables stored ... see fg_append_concept_info_data_sql mapping options","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_dbplyr_append_concept_info_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fg_dbplyr_append_concept_info_data — fg_dbplyr_append_concept_info_data","text":"tbl added columns","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_dbplyr_append_provider_info_to_service_sector_data.html","id":null,"dir":"Reference","previous_headings":"","what":"fg_dbplyr_append_provider_info_to_service_sector_data — fg_dbplyr_append_provider_info_to_service_sector_data","title":"fg_dbplyr_append_provider_info_to_service_sector_data — fg_dbplyr_append_provider_info_to_service_sector_data","text":"Wrap around fg_append_provider_info_to_service_sector_data_sql work dbplyr package","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_dbplyr_append_provider_info_to_service_sector_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fg_dbplyr_append_provider_info_to_service_sector_data — fg_dbplyr_append_provider_info_to_service_sector_data","text":"","code":"fg_dbplyr_append_provider_info_to_service_sector_data(   dbplyr_table,   dbplyr_fg_codes_info_table,   ... )"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_dbplyr_append_provider_info_to_service_sector_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fg_dbplyr_append_provider_info_to_service_sector_data — fg_dbplyr_append_provider_info_to_service_sector_data","text":"dbplyr_table object type  representing table longitudinal_data format dbplyr_fg_codes_info_table string full path (schema.table) database table fg_codes_info ... see fg_append_code_info_to_longitudinal_data_sql mapping options","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_dbplyr_append_provider_info_to_service_sector_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fg_dbplyr_append_provider_info_to_service_sector_data — fg_dbplyr_append_provider_info_to_service_sector_data","text":"added columns","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_dbplyr_append_visit_type_info_to_service_sector_data.html","id":null,"dir":"Reference","previous_headings":"","what":"fg_dbplyr_append_visit_type_info_to_service_sector_data — fg_dbplyr_append_visit_type_info_to_service_sector_data","title":"fg_dbplyr_append_visit_type_info_to_service_sector_data — fg_dbplyr_append_visit_type_info_to_service_sector_data","text":"Wrap around fg_append_provider_info_to_service_sector_data_sql work dbplyr package","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_dbplyr_append_visit_type_info_to_service_sector_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fg_dbplyr_append_visit_type_info_to_service_sector_data — fg_dbplyr_append_visit_type_info_to_service_sector_data","text":"","code":"fg_dbplyr_append_visit_type_info_to_service_sector_data(   dbplyr_table,   dbplyr_fg_codes_info_table,   ... )"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_dbplyr_append_visit_type_info_to_service_sector_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fg_dbplyr_append_visit_type_info_to_service_sector_data — fg_dbplyr_append_visit_type_info_to_service_sector_data","text":"dbplyr_table object type  representing table longitudinal_data format dbplyr_fg_codes_info_table string full path (schema.table) database table fg_codes_info ... see fg_append_visit_type_info_to_service_sector_data_sql mapping options","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_dbplyr_append_visit_type_info_to_service_sector_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fg_dbplyr_append_visit_type_info_to_service_sector_data — fg_dbplyr_append_visit_type_info_to_service_sector_data","text":"added columns","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_get_bq_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Get BQ Configuration — fg_get_bq_config","title":"Get BQ Configuration — fg_get_bq_config","text":"function retrieves configuration settings work FinnGen BQ database specified environment data freeze number.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_get_bq_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get BQ Configuration — fg_get_bq_config","text":"","code":"fg_get_bq_config(   environment,   dataFreezeNumber,   atlasDevelopment_gckey = Sys.getenv(\"GCP_SERVICE_KEY\"),   atlasDevelopment_pathToDriver = system.file(\"drivers\", package = \"FinnGenUtilsR\"),   asYaml = FALSE )"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_get_bq_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get BQ Configuration — fg_get_bq_config","text":"environment Environment must 'sandbox-' followed sandbox number (Alternatively, can 'atlasDevelopment' testing outside sandbox). dataFreezeNumber data freeze number retrieve configuration settings . atlasDevelopment_gckey environment = 'atlasDevelopment', path Google Cloud key file. atlasDevelopment_pathToDriver environment = 'atlasDevelopment', path BigQuery driver. asYaml Whether return configuration settings YAML string (default FALSE).","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_get_bq_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get BQ Configuration — fg_get_bq_config","text":"list configuration settings specified environment data freeze number.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_get_bq_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get BQ Configuration — fg_get_bq_config","text":"","code":"fg_get_bq_config(\"sandbox-6\", 13) #> Set option sqlRenderTempEmulationSchema = 'fg-production-sandbox-6.sandbox' #> $databaseName #> [1] \"FinnGen-DF13\" #>  #> $connection #> $connection$connectionDetailsSettings #> $connection$connectionDetailsSettings$dbms #> [1] \"bigquery\" #>  #> $connection$connectionDetailsSettings$user #> [1] \"\" #>  #> $connection$connectionDetailsSettings$password #> [1] \"\" #>  #> $connection$connectionDetailsSettings$connectionString #> [1] \"jdbc:bigquery://https://www.googleapis.com/auth/bigquery:433;ProjectId=fg-production-sandbox-6;OAuthType=3;Timeout=10000;\" #>  #> $connection$connectionDetailsSettings$pathToDriver #> [1] \"/home/ivm/.jdbc_drivers/bigquery\" #>  #>  #> $connection$tempEmulationSchema #> [1] \"fg-production-sandbox-6.sandbox\" #>  #> $connection$useBigrqueryUpload #> [1] TRUE #>  #>  #> $schemas #> $schemas$sandboxToolsSchema #> [1] \"finngen-production-library.sandbox_tools_r13\" #>  #> $schemas$medicalCodesSchema #> [1] \"finngen-production-library.medical_codes\" #>  #>"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_get_cdm_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Get CDM Configuration — fg_get_cdm_config","title":"Get CDM Configuration — fg_get_cdm_config","text":"function retrieves configuration settings work OMOP-CDM database specified environment data freeze number.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_get_cdm_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get CDM Configuration — fg_get_cdm_config","text":"","code":"fg_get_cdm_config(   environment,   dataFreezeNumber,   cohortTableName = \"test_cohort_table\",   atlasDevelopment_gckey = Sys.getenv(\"GCP_SERVICE_KEY\"),   atlasDevelopment_pathToDriver = system.file(\"extdata\", \"my_raw_data.csv\", package =     \"my_package\"),   asYaml = FALSE )"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_get_cdm_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get CDM Configuration — fg_get_cdm_config","text":"environment Environment must 'sandbox-' followed sandbox number (Alternatively, can 'atlasDevelopment' testing outside sandbox). dataFreezeNumber data freeze number retrieve configuration settings . cohortTableName cohort table needed, can set , (default \"test_cohort_table\"). atlasDevelopment_gckey environment = 'atlasDevelopment', path Google Cloud key file. atlasDevelopment_pathToDriver environment = 'atlasDevelopment', path BigQuery driver. asYaml Whether return configuration settings YAML string (default FALSE).","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_get_cdm_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get CDM Configuration — fg_get_cdm_config","text":"list configuration settings specified environment data freeze number.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/fg_get_cdm_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get CDM Configuration — fg_get_cdm_config","text":"","code":"fg_get_cdm_config(\"sandbox-6\", 13) #> Set option sqlRenderTempEmulationSchema = 'fg-production-sandbox-6.sandbox' #> $databaseName #> [1] \"FinnGen-DF13\" #>  #> $connection #> $connection$connectionDetailsSettings #> $connection$connectionDetailsSettings$dbms #> [1] \"bigquery\" #>  #> $connection$connectionDetailsSettings$user #> [1] \"\" #>  #> $connection$connectionDetailsSettings$password #> [1] \"\" #>  #> $connection$connectionDetailsSettings$connectionString #> [1] \"jdbc:bigquery://https://www.googleapis.com/auth/bigquery:433;ProjectId=fg-production-sandbox-6;OAuthType=3;Timeout=10000;\" #>  #> $connection$connectionDetailsSettings$pathToDriver #> [1] \"/home/ivm/.jdbc_drivers/bigquery\" #>  #>  #> $connection$tempEmulationSchema #> [1] \"fg-production-sandbox-6.sandbox\" #>  #> $connection$useBigrqueryUpload #> [1] TRUE #>  #>  #> $cdm #> $cdm$cdmDatabaseSchema #> [1] \"finngen-production-library.finngen_omop_r13\" #>  #> $cdm$vocabularyDatabaseSchema #> [1] \"finngen-production-library.finngen_omop_r13\" #>  #>  #> $cohortTable #> $cohortTable$cohortDatabaseSchema #> [1] \"fg-production-sandbox-6.sandbox\" #>  #> $cohortTable$cohortTableName #> [1] \"test_cohort_table\" #>  #>  #> $webAPIurl #> [1] \"https://ohdsi-webapi.app.finngen.fi/WebAPI/\" #>"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/runGWASAnalysis.html","id":null,"dir":"Reference","previous_headings":"","what":"runGWASAnalysis — runGWASAnalysis","title":"runGWASAnalysis — runGWASAnalysis","text":"runGWASAnalysis","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/runGWASAnalysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"runGWASAnalysis — runGWASAnalysis","text":"","code":"runGWASAnalysis(   connection_sandboxAPI,   cases_finngenids,   controls_finngenids,   phenotype_name,   title = phenotype_name,   description = phenotype_name,   notification_email = connection_sandboxAPI$notification_email,   analysis_type = \"additive\",   release = \"Regenie12\" )"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/runGWASAnalysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"runGWASAnalysis — runGWASAnalysis","text":"connection_sandboxAPI PARAM_DESCRIPTION cases_finngenids PARAM_DESCRIPTION controls_finngenids PARAM_DESCRIPTION phenotype_name PARAM_DESCRIPTION title PARAM_DESCRIPTION, Default: phenotype_name description PARAM_DESCRIPTION, Default: phenotype_name notification_email PARAM_DESCRIPTION, Default: connection_sandboxAPI$notification_email analysis_type Specifies type analysis perform (additive, recessive, dominant), Default: 'additive' release PARAM_DESCRIPTION, Default: 'Regenie12'","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/tmp_ConnectionHandler.html","id":null,"dir":"Reference","previous_headings":"","what":"tmp fix for ConnectionHandler — tmp_ConnectionHandler","title":"tmp fix for ConnectionHandler — tmp_ConnectionHandler","text":"tmp fix ConnectionHandler tmp fix ConnectionHandler","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/tmp_ConnectionHandler.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"tmp fix for ConnectionHandler — tmp_ConnectionHandler","text":"till fixed https://github.com/OHDSI/DatabaseConnector/issues/236","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/tmp_ConnectionHandler.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"tmp fix for ConnectionHandler — tmp_ConnectionHandler","text":"FinnGenUtilsR::ConnectionHandler -> tmp_ConnectionHandler","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/tmp_ConnectionHandler.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"tmp fix for ConnectionHandler — tmp_ConnectionHandler","text":"FinnGenUtilsR::ConnectionHandler$closeConnection() FinnGenUtilsR::ConnectionHandler$dbIsValid() FinnGenUtilsR::ConnectionHandler$dbms() FinnGenUtilsR::ConnectionHandler$executeFunction() FinnGenUtilsR::ConnectionHandler$executeSql() FinnGenUtilsR::ConnectionHandler$finalize() FinnGenUtilsR::ConnectionHandler$getConnection() FinnGenUtilsR::ConnectionHandler$initConnection() FinnGenUtilsR::ConnectionHandler$initialize() FinnGenUtilsR::ConnectionHandler$queryDb() FinnGenUtilsR::ConnectionHandler$queryFunction() FinnGenUtilsR::ConnectionHandler$renderTranslateSql()","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/tmp_ConnectionHandler.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"tmp fix for ConnectionHandler — tmp_ConnectionHandler","text":"tmp_ConnectionHandler$tbl() tmp_ConnectionHandler$clone()","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/tmp_ConnectionHandler.html","id":"method-tbl-","dir":"Reference","previous_headings":"","what":"Method tbl()","title":"tmp fix for ConnectionHandler — tmp_ConnectionHandler","text":"get dplyr table object (.e. lazy loaded)","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/tmp_ConnectionHandler.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tmp fix for ConnectionHandler — tmp_ConnectionHandler","text":"","code":"tmp_ConnectionHandler$tbl(table, databaseSchema = NULL)"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/tmp_ConnectionHandler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tmp fix for ConnectionHandler — tmp_ConnectionHandler","text":"table table name databaseSchema databaseSchema table belongs","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/tmp_ConnectionHandler.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"tmp fix for ConnectionHandler — tmp_ConnectionHandler","text":"objects class cloneable method.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/tmp_ConnectionHandler.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"tmp fix for ConnectionHandler — tmp_ConnectionHandler","text":"","code":"tmp_ConnectionHandler$clone(deep = FALSE)"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/tmp_ConnectionHandler.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"tmp fix for ConnectionHandler — tmp_ConnectionHandler","text":"deep Whether make deep clone.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/tmp_dplyr_copy_to.html","id":null,"dir":"Reference","previous_headings":"","what":"tmp fix for dplyr::copy_to — tmp_dplyr_copy_to","title":"tmp fix for dplyr::copy_to — tmp_dplyr_copy_to","text":"dplyr::copy_to slow upload tables BQ. function calls dplyr::copy_to except option \"useBigrqueryUpload\" option set TRUE case uses package bigrquery upload table","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/tmp_dplyr_copy_to.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tmp fix for dplyr::copy_to — tmp_dplyr_copy_to","text":"","code":"tmp_dplyr_copy_to(   dest,   df,   name = deparse(substitute(df)),   overwrite = FALSE,   ... )"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/tmp_dplyr_copy_to.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tmp fix for dplyr::copy_to — tmp_dplyr_copy_to","text":"dest destination database connection table name. df data frame copied. name name destination table (default name data frame). overwrite Logical value indicating whether overwrite existing table (default FALSE). ... pass parameters dplyr::copy_to","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/tmp_dplyr_copy_to.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"tmp fix for dplyr::copy_to — tmp_dplyr_copy_to","text":"new table created updated table.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/tmp_inDatabaseSchema.html","id":null,"dir":"Reference","previous_headings":"","what":"tmp fix for DatabaseConnector::inDatabaseSchema — tmp_inDatabaseSchema","title":"tmp fix for DatabaseConnector::inDatabaseSchema — tmp_inDatabaseSchema","text":"till fixed https://github.com/OHDSI/DatabaseConnector/issues/236","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/tmp_inDatabaseSchema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tmp fix for DatabaseConnector::inDatabaseSchema — tmp_inDatabaseSchema","text":"","code":"tmp_inDatabaseSchema(databaseSchema, table)"},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/tmp_inDatabaseSchema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tmp fix for DatabaseConnector::inDatabaseSchema — tmp_inDatabaseSchema","text":"databaseSchema name database schema. table name table.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/reference/tmp_inDatabaseSchema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"tmp fix for DatabaseConnector::inDatabaseSchema — tmp_inDatabaseSchema","text":"fully qualified table name database schema.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/news/index.html","id":"finngenutilsr-310","dir":"Changelog","previous_headings":"","what":"FinnGenUtilsR 3.1.0","title":"FinnGenUtilsR 3.1.0","text":"fg_append_visit_type_info_to_service_sector_data_sql now adds two columns data: is_clinic_visit is_follow_up_visit new functions append omop lab test name Kanta data. See examples vignettes.","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/news/index.html","id":"finngenutilsr-300","dir":"Changelog","previous_headings":"","what":"FinnGenUtilsR 3.0.0","title":"FinnGenUtilsR 3.0.0","text":"Make package compatible Sandbox local CRAN Added functions add info longitudinal data using dbplyr Added tutorial work FGconnectionHandler dbplyr Added Github actions r-check package every week latest dependencies","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/news/index.html","id":"finngenutilsr-221","dir":"Changelog","previous_headings":"","what":"FinnGenUtilsR 2.2.1","title":"FinnGenUtilsR 2.2.1","text":"Fix bug fg_get_bq_config","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/news/index.html","id":"finngenutilsr-220","dir":"Changelog","previous_headings":"","what":"FinnGenUtilsR 2.2.0","title":"FinnGenUtilsR 2.2.0","text":"Added FGconnectionHandler fg_get_bq_config() connect work FinnGen BQ databases data frames","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/news/index.html","id":"finngenutilsr-210","dir":"Changelog","previous_headings":"","what":"FinnGenUtilsR 2.1.0","title":"FinnGenUtilsR 2.1.0","text":"Added fg_get_cdm_config function “Tutorial using OMOP-CDM” vignette","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/news/index.html","id":"finngenutilsr-201","dir":"Changelog","previous_headings":"","what":"FinnGenUtilsR 2.0.1","title":"FinnGenUtilsR 2.0.1","text":"fg_bq_append_xxx functions pass extra parameters bq_project_query, (e.g allows pass quiet=TRUE)","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/news/index.html","id":"finngenutilsr-200","dir":"Changelog","previous_headings":"","what":"FinnGenUtilsR 2.0.0","title":"FinnGenUtilsR 2.0.0","text":"Added function name visit type service sector data Added function name provider service sector data","code":""},{"path":"https://finngen.github.io/FinnGenUtilsR/news/index.html","id":"finngenutilsr-100","dir":"Changelog","previous_headings":"","what":"FinnGenUtilsR 1.0.0","title":"FinnGenUtilsR 1.0.0","text":"Created function fg_append_code_info_to_longitudinal_data_sql","code":""}]
